{"version":3,"file":"static/js/1358.359c4398.chunk.js","mappings":"sJAwDA,IA/CsB,SAAHA,GAAiE,IAA5DC,EAAID,EAAJC,KAAIC,EAAAF,EAAEG,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAEE,EAASJ,EAATI,UAASC,EAAAL,EAAEM,WAAAA,OAAU,IAAAD,GAAQA,EAAEE,EAAKP,EAALO,MACpEC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAa1B,OANAG,EAAAA,EAAAA,YAAU,WAGN,OAFAD,GAAW,GAEJ,kBAAMA,GAAW,EAAO,CACnC,GAAG,KAGCE,EAAAA,EAAAA,KAAA,QAAMnB,UAAWA,GAAwB,GAAGoB,SAErCJ,IACIG,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,CACLtB,OAAQa,GAAYb,EACpBuB,UACIC,EAAAA,EAAAA,MAAA,QAAAH,SAAA,CAAM,OACFlB,IACAiB,EAAAA,EAAAA,KAAA,UAAQnB,UAAU,eAAewB,QApBvC,SAAAC,GACjBA,EAAEC,iBACFb,GAAY,EAChB,EAiBkFO,SAAC,iBAGhEO,WAAY,kBAAMlB,GAAcD,EAAU,EAC1CL,MAAOA,EAAMiB,SAEZvB,KAMxB,C,mFC7CA,EAA4B,yBAA5B,EAA+D,uBAA/D,EAA8F,qBAA9F,EAA0H,oBAA1H,EAAqJ,oBAArJ,EAAqL,yBAArL,EAAsN,qB,gCCsCtN,EA9BmB,WACf,IAAA+B,GAAuBC,EAAAA,EAAAA,KAAYC,GAAAvB,EAAAA,EAAAA,GAAAqB,EAAA,GAA5BG,EAAGD,EAAA,GAAG3B,EAAK2B,EAAA,GAAL3B,MAEb,OACIoB,EAAAA,EAAAA,MAAA,OAAKvB,UAAS,GAAAgC,OAAKC,EAAgB,iBAAgBb,SAAA,EAC/CG,EAAAA,EAAAA,MAAA,OAAKvB,UAAWiC,EAAab,SAAA,EACzBD,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAgB,KAAAD,OAAIC,EAAW,8BAC7C,aAAW,gBAAeb,UAC9BD,EAAAA,EAAAA,KAAA,KAAGnB,UAAU,4BAEjBmB,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAY,KAAAD,OAAIC,EAAW,OAAOF,IAAKA,EAAIX,UAC7DD,EAAAA,EAAAA,KAACe,EAAAA,EAAa,CAACC,QAAS,EAAGtC,KAAK,6DACjBM,MAAOA,UAG9BgB,EAAAA,EAAAA,KAAA,QAAMnB,UAAWiC,KACjBV,EAAAA,EAAAA,MAAA,OAAKvB,UAAWiC,EAAab,SAAA,EACzBD,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAY,KAAAD,OAAIC,EAAW,OAAMb,UACnDD,EAAAA,EAAAA,KAACe,EAAAA,EAAa,CAACC,QAAS,EAAGtC,KAAK,+CACjBM,MAAOA,OAE1BgB,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAgB,KAAAD,OAAIC,EAAW,8BAC7C,aAAW,YAAWb,UAC1BD,EAAAA,EAAAA,KAAA,KAAGnB,UAAU,iCAKjC,C","sources":["components/CollapsedText.jsx","webpack://xchain/./src/layout/post/Navigation/style.module.scss?e90f","layout/post/Navigation/index.jsx"],"sourcesContent":["// components\nimport Truncate from 'react-truncate';\n\n// hooks\nimport {useState, useEffect} from 'react';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst CollapsedText = ({text, lines = 2, className, withButton = false, width}) => {\n    const [truncated, setTruncated] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const [mounted, setMounted] = useState(false);\n\n    const handleExpand = e => {\n        e.preventDefault();\n        setExpanded(true);\n    }\n\n    useEffect(() => {\n        setMounted(true);\n\n        return () => setMounted(false);\n    }, []);\n\n    return (\n        <span className={className ? className : ''}>\n           {\n               mounted && (\n                   <Truncate\n                       lines={!expanded && lines}\n                       ellipsis={(\n                           <span>... {\n                               withButton &&\n                               <button className=\"text-divider\" onClick={handleExpand}>Read more</button>}\n                    </span>\n                       )}\n                       onTruncate={() => setTruncated(!truncated)}\n                       width={width}\n                   >\n                       {text}\n                   </Truncate>\n               )\n           }\n        </span>\n    )\n}\n\nCollapsedText.propTypes = {\n    text: PropTypes.string.isRequired,\n    lines: PropTypes.number,\n    className: PropTypes.string,\n    withButton: PropTypes.bool,\n    width: PropTypes.number.isRequired\n}\n\nexport default CollapsedText","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__tGAhP\",\"divider\":\"style_divider__yqUp8\",\"title\":\"style_title__zrI5a\",\"next\":\"style_next__LeUeN\",\"prev\":\"style_prev__wiKS7\",\"navigator\":\"style_navigator__ShbdA\",\"block\":\"style_block__vz9TV\"};","// styling\nimport styles from './style.module.scss';\n\n// components\nimport CollapsedText from '@components/CollapsedText';\n\n// hooks\nimport useMeasure from 'react-use-measure';\n\nconst Navigation = () => {\n    const [ref, {width}] = useMeasure();\n\n    return (\n        <div className={`${styles.container} post-section`}>\n            <div className={styles.block}>\n                <button className={`${styles.navigator} ${styles.prev} navigator navigator--prev`}\n                        aria-label=\"Previous post\">\n                    <i className=\"icon icon-angle-left\" />\n                </button>\n                <button className={`${styles.title} ${styles.prev} h5`} ref={ref}>\n                    <CollapsedText maxLine={2} text=\"The rise of the non fungible token internet having trouble\"\n                                   width={width} />\n                </button>\n            </div>\n            <span className={styles.divider}/>\n            <div className={styles.block}>\n                <button className={`${styles.title} ${styles.next} h5`}>\n                    <CollapsedText maxLine={2} text=\"Guide to creating & selling digital art NFTs\"\n                                   width={width} />\n                </button>\n                <button className={`${styles.navigator} ${styles.next} navigator navigator--next`}\n                        aria-label=\"Next post\">\n                    <i className=\"icon icon-angle-right\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation"],"names":["_ref","text","_ref$lines","lines","className","_ref$withButton","withButton","width","_useState","useState","_useState2","_slicedToArray","truncated","setTruncated","_useState3","_useState4","expanded","setExpanded","_useState5","_useState6","mounted","setMounted","useEffect","_jsx","children","Truncate","ellipsis","_jsxs","onClick","e","preventDefault","onTruncate","_useMeasure","useMeasure","_useMeasure2","ref","concat","styles","CollapsedText","maxLine"],"sourceRoot":""}