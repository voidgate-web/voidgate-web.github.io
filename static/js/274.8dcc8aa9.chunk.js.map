{"version":3,"file":"static/js/274.8dcc8aa9.chunk.js","mappings":"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","sources":["../node_modules/debounce/index.js","../node_modules/react-truncate/lib/Truncate.js","../node_modules/react-use-measure/dist/web.js"],"sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports","_extends","Object","assign","target","i","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate","_Component","_ref","instance","TypeError","_classCallCheck","_len","Array","_key","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","children","forceUpdate","width","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","React","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","Component","propTypes","PropTypes","defaultProps","useMeasure","_temp","scroll","offsetSize","polyfill","ResizeObserver","Error","_useState","useState","height","bottom","right","x","y","_useState2","_slicedToArray","bounds","set","useRef","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","mounted","useEffect","current","_useMemo","useMemo","_state$current$elemen","size","offsetHeight","freeze","areBoundsEqual","createDebounce","_useMemo2","forceRefresh","resizeChange","scrollChange","removeListeners","forEach","disconnect","addListeners","observe","scrollContainer","capture","passive","onScroll","enabled","onWindowResize","Boolean","cb","findScrollContainers","body","_window$getComputedSt","overflow","overflowX","overflowY","some","prop","_toConsumableArray","parentElement","a","b","every"],"sourceRoot":""}