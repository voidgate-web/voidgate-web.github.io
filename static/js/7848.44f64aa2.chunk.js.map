{"version":3,"file":"static/js/7848.44f64aa2.chunk.js","mappings":"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","sources":["components/BidModal.jsx","ui/GradientBtn.jsx","ui/StyledModal.jsx"],"sourcesContent":["// styling\r\nimport styled from 'styled-components/macro';\r\n\r\n// components\r\nimport StyledModal from '@ui/StyledModal';\r\nimport GradientBtn from '@ui/GradientBtn';\r\nimport {NumericFormat} from 'react-number-format';\r\nimport {toast} from 'react-toastify';\r\n\r\n// hooks\r\nimport {useBidModalContext} from '@contexts/bidModalContext';\r\nimport {useState} from 'react';\r\nimport {useForm, Controller} from 'react-hook-form';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\n\r\nconst StyledBidModal = styled(StyledModal)`\r\n  .content {\r\n    max-width: 500px;\r\n\r\n    &_header {\r\n      text-align: center;\r\n    }\r\n\r\n    &_main {\r\n      margin: 30px 0;\r\n      gap: 10px;\r\n\r\n      .row {\r\n        flex-direction: column;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 414px) {\r\n    .content_main .row {\r\n      flex-direction: row;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BidModal = () => {\r\n    const minBid = 3.08, fee = 0.10;\r\n    const {isBidModalOpen, closeBidModal} = useBidModalContext();\r\n    const [bid, setBid] = useState(0);\r\n    const {control, handleSubmit, formState: {errors}, reset} = useForm();\r\n\r\n    const handleClose = () => {\r\n        closeBidModal();\r\n        setBid(minBid);\r\n    }\r\n\r\n    const handleBid = () => {\r\n        toast.success('Bid placed successfully');\r\n        reset();\r\n        handleClose();\r\n    }\r\n\r\n    const getTotal = () => {\r\n        return bid !== 0 ? (+bid + fee).toFixed(2) : (minBid + fee).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <StyledBidModal open={isBidModalOpen} onClose={handleClose}>\r\n            <div className=\"content_header d-flex flex-column g-30\">\r\n                <div className=\"d-flex flex-column g-10\">\r\n                    <h4>Place a bid</h4>\r\n                    <p>You purchase a product from VoidGate</p>\r\n                </div>\r\n                <form className=\"d-flex\">\r\n                    <Controller control={control}\r\n                                name=\"bid\"\r\n                                rules={{required: true, min: minBid}}\r\n                                defaultValue=\"\"\r\n                                render={({field}) => (\r\n                                    <NumericFormat\r\n                                        className={classNames('field field--outline flex-1', {'field--error': errors.bid})}\r\n                                        placeholder={`${minBid} ETH`}\r\n                                        thousandSeparator={true}\r\n                                        allowNegative={false}\r\n                                        suffix=\" ETH\"\r\n                                        name={field.name}\r\n                                        onValueChange={({value}) => {\r\n                                            setBid(+value);\r\n                                            field.onChange(+value);\r\n                                        }}\r\n                                    />\r\n                                )}/>\r\n                </form>\r\n            </div>\r\n            <div className=\"content_main d-flex flex-column\">\r\n                <p className=\"row d-flex justify-content-between\">\r\n                    You must bid at least: <span className=\"text-bold text-light\">{minBid.toFixed(2)} ETH</span>\r\n                </p>\r\n                <p className=\"row d-flex justify-content-between\">\r\n                    Service fee: <span className=\"text-bold text-light\">{fee.toFixed(2)} ETH</span>\r\n                </p>\r\n                <p className=\"row d-flex justify-content-between\">\r\n                    Total bid amount:\r\n                    <span className=\"text-bold text-light\">\r\n                            {getTotal()} ETH\r\n                        </span>\r\n                </p>\r\n            </div>\r\n            <div className=\"content_footer d-flex flex-column g-20\">\r\n                <GradientBtn tag=\"button\" onClick={handleSubmit(handleBid)}>Place a bid</GradientBtn>\r\n                <button className=\"btn btn--outline\" onClick={handleClose}>\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </StyledBidModal>\r\n    )\r\n}\r\n\r\nexport default BidModal","// components\r\nimport {animated, useSpring} from '@react-spring/web';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n// hooks\r\nimport {useState} from 'react';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\n\r\nconst Wrapper = ({tag, href, ...props}) => {\r\n    if (tag === 'button') {\r\n        return <animated.button {...props}/>\r\n    }\r\n\r\n    if (href === undefined || href === '#') {\r\n        return <animated.a {...props}/>\r\n    }\r\n\r\n    const AnimatedNavLink = animated(NavLink);\r\n    return <AnimatedNavLink to={href} {...props}/>\r\n}\r\n\r\nconst GradientBtn = ({className, ...props}) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const variants = {\r\n        static: {background: 'linear-gradient(98.49deg, #05C9F9 -11.31%, #E5F61B 76.26%)'},\r\n        active: {background: 'linear-gradient(98.49deg, #E5F61B -11.31%, #05C9F9 76.26%)'},\r\n    };\r\n\r\n    const {background} = useSpring({\r\n        background: isHovered ? variants.active.background : variants.static.background,\r\n        config: {duration: 300},\r\n        ...props,\r\n    });\r\n\r\n    return (\r\n        <Wrapper className={classNames('btn btn--gradient', className)} {...props}\r\n                         onMouseEnter={() => setIsHovered(true)}\r\n                         onMouseLeave={() => setIsHovered(false)}\r\n                         style={{background, color: '#000000'}}>\r\n            {props.children}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default GradientBtn","// styling\r\nimport styled from 'styled-components/macro';\r\n\r\n// components\r\nimport Modal from '@mui/material/Modal';\r\nimport Grow from '@mui/material/Grow';\r\n\r\n// hooks\r\nimport {useEffect} from 'react';\r\nimport useScrollLock from '@hooks/useScrollLock';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalWrapper = styled(Modal)`\r\n  padding: 20px;\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 100000 !important;\r\n\r\n  .MuiBackdrop-root {\r\n    background: rgba(1, 1, 1, .6);\r\n  }\r\n\r\n  .content {\r\n    padding: 30px 20px;\r\n    position: relative;\r\n    flex: 1;\r\n    max-width: 1000px;\r\n    overflow: visible;\r\n    \r\n    .search-form {\r\n      margin: 10px 0;\r\n    }\r\n\r\n    .icon-close {\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 10px;\r\n      font-size: 20px;\r\n      color: var(--divider);\r\n      transition: all var(--transition);\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        color: var(--text-light);\r\n      }\r\n    }\r\n  }\r\n\r\n  &.video-container .content {\r\n    iframe {\r\n      aspect-ratio: 16 / 9;\r\n    }\r\n\r\n    .icon-close {\r\n      top: -10px;\r\n      right: -10px;\r\n      background: var(--accent);\r\n      width: 25px;\r\n      height: 25px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border-radius: 50%;\r\n      font-size: 14px;\r\n      will-change: transform;\r\n\r\n      &:hover {\r\n        transform: scale(1.1);\r\n        color: var(--bg-primary);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 414px) {\r\n    .content {\r\n      padding: 40px 30px;\r\n\r\n      .icon {\r\n        top: 20px;\r\n        right: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content {\r\n      padding: 50px 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledModal = ({children, ...props}) => {\r\n    const {lockScroll, unlockScroll} = useScrollLock();\r\n\r\n    useEffect(() => {\r\n        props.open ? lockScroll() : unlockScroll();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.open]);\r\n\r\n    return (\r\n        <ModalWrapper {...props} closeAfterTransition>\r\n            <Grow in={props.open} timeout={300}>\r\n                <div className=\"content bg-tertiary border-10\">\r\n                    <i className=\"icon icon-xmark icon-close\" onClick={props.onClose}/>\r\n                    {children}\r\n                </div>\r\n            </Grow>\r\n        </ModalWrapper>\r\n    );\r\n}\r\n\r\nStyledModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default StyledModal"],"names":["StyledBidModal","styled","StyledModal","withConfig","componentId","minBid","_useBidModalContext","useBidModalContext","isBidModalOpen","closeBidModal","_useState","useState","_useState2","_slicedToArray","bid","setBid","_useForm","useForm","control","handleSubmit","errors","formState","reset","handleClose","_jsxs","open","onClose","children","className","_jsx","Controller","name","rules","required","min","defaultValue","render","_ref","field","NumericFormat","classNames","placeholder","concat","thousandSeparator","allowNegative","suffix","onValueChange","_ref2","value","onChange","toFixed","GradientBtn","tag","onClick","toast","Wrapper","href","props","_objectWithoutProperties","_excluded","animated","_objectSpread","undefined","AnimatedNavLink","NavLink","to","_excluded2","isHovered","setIsHovered","variants","background","useSpring","config","duration","onMouseEnter","onMouseLeave","style","color","ModalWrapper","Modal","_useScrollLock","useScrollLock","lockScroll","unlockScroll","useEffect","closeAfterTransition","Grow","in","timeout"],"sourceRoot":""}