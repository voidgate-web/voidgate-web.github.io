{"version":3,"file":"static/js/219.aff11aa5.chunk.js","mappings":"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","sources":["webpack://voigate/./src/components/Socials/style.module.scss?d9ab","components/Socials/index.jsx","components/Spring.jsx","webpack://voigate/./src/components/TeamList/style.module.scss?2101","webpack://voigate/./src/components/TeamList/TeamListItem/style.module.scss?23d3","components/TeamList/TeamListItem/index.jsx","db/team.js","components/TeamList/index.jsx","constants/links.js","pages/Team.jsx","assets/icons/verified.svg","ui/Avatar.jsx","../node_modules/react-use/esm/useEffectOnce.js","../node_modules/react-use/esm/useUnmount.js","../node_modules/react-use/esm/useRafState.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useWindowSize.js","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"style_link__CgcIc\",\"facebook\":\"style_facebook__EUvBn\"};","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// constants\r\nimport {PROFILE_SOCIAL_LINKS} from '@constants/links';\r\n\r\nconst Socials = ({value ,className}) => {\r\n    const socialAssets = [\r\n        {\r\n            icon: 'discord',\r\n         //   url: value.discordUrl,\r\n            name: 'Discord'\r\n        },\r\n        {\r\n            icon: 'twitter',\r\n          //  url: 'https://twitter.com/'+value.twitterUsername,\r\n            name: 'twitter'\r\n        },\r\n        {\r\n            icon: 'telegram',\r\n          //  url: value.externalUrl,\r\n            name: 'telegram'\r\n        }\r\n    ]\r\n    return (\r\n        <div className={`${className || ''} d-flex g-20`}>\r\n            {\r\n                socialAssets.map(link => {\r\n                    if (link.url != null && link.url !=\"https://twitter.com/null\"){\r\n                    return (\r\n                        <a className={styles.link}\r\n                           key={link.url}\r\n                           href={link.url}\r\n                           target=\"_blank\"\r\n                           rel=\"noreferrer noopener\"\r\n                           aria-label={link.name}>\r\n                            <i className={`icon icon-${link.icon} ${link.icon === 'facebook' ? styles.facebook : ''}`}/>\r\n                        </a>\r\n                    )\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Socials","// components\r\nimport {animated, useSpring} from '@react-spring/web';\r\n\r\n// hooks\r\nimport {useInView} from 'react-intersection-observer';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Spring = ({children, index = 1, className, type = 'slide', delay, ...props}) => {\r\n    const [ref, inView] = useInView({\r\n        threshold: 0.2,\r\n        triggerOnce: true\r\n    });\r\n\r\n    const common = {\r\n        config: {duration: 300, mass: 1, tension: 300, friction: 30},\r\n        delay: props.delay ? props.delay : 100 * index,\r\n    }\r\n\r\n    const slide = useSpring({\r\n        from: {transform: 'translateY(40px)', opacity: 0},\r\n        to: {transform: inView ? 'translateY(0px)' : 'translateY(40px)', opacity: inView ? 1 : 0},\r\n        ...common,\r\n        ...props\r\n    });\r\n\r\n    const fade = useSpring({\r\n        from: {opacity: 0},\r\n        to: {opacity: inView ? 1 : 0},\r\n        ...common,\r\n        ...props\r\n    });\r\n\r\n    const grow = useSpring({\r\n        from: {transform: 'scale(0.4)'},\r\n        to: {transform: inView ? 'scale(1)' : 'scale(0.4)'},\r\n        ...common,\r\n        ...props\r\n    });\r\n\r\n    const spring = {\r\n        slide,\r\n        fade,\r\n        grow\r\n    }\r\n\r\n    return (\r\n        <animated.div className={className ? className : ''} style={spring[type]} ref={ref}>\r\n            {children}\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nSpring.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    index: PropTypes.number,\r\n    className: PropTypes.string,\r\n    type: PropTypes.oneOf(['slide', 'fade', 'grow']),\r\n    delay: PropTypes.number\r\n}\r\n\r\nexport default Spring","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"style_list__NzfPy\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"style_wrapper__glwX8\",\"avatar\":\"style_avatar__CfK4w\",\"main\":\"style_main__YEZvx\",\"main_bio\":\"style_main_bio__mq6-f\"};","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// components\r\nimport Avatar from '@ui/Avatar';\r\nimport Socials from '@components/Socials';\r\nimport Spring from '@components/Spring';\r\n\r\n// hooks\r\nimport {useWindowSize} from 'react-use';\r\n\r\nconst TeamListItem = ({data, index}) => {\r\n    const isHorizontal = useWindowSize().width >= 768;\r\n    const {name, position, avatar, bio} = data;\r\n\r\n    return (\r\n        <Spring index={index}>\r\n            <div className={`${styles.wrapper} border-hover bg-primary ${isHorizontal ? 'border-hover--horizontal' : ''}`}>\r\n                <Avatar className={styles.avatar} src={avatar} alt={name} />\r\n                <div className={styles.main}>\r\n                    <div className=\"d-flex flex-column g-10\">\r\n                        <h5>{name}</h5>\r\n                        <span className=\"text-accent text-sm\">{position}</span>\r\n                        <p className={`${styles.main_bio} text-sm`}>{bio}</p>\r\n                    </div>\r\n                    <Socials />\r\n                </div>\r\n            </div>\r\n        </Spring>\r\n    );\r\n}\r\n\r\nexport default TeamListItem","// assets\r\nimport img1 from '@assets/team/1.webp';\r\nimport img2 from '@assets/team/2.webp';\r\nimport img3 from '@assets/team/3.webp';\r\nimport img4 from '@assets/team/4.webp';\r\nimport img5 from '@assets/team/5.webp';\r\nimport img6 from '@assets/team/6.webp';\r\nimport img7 from '@assets/team/7.webp';\r\nimport img8 from '@assets/team/8.webp';\r\n\r\nconst team = [\r\n    {\r\n        id: 'member-1',\r\n        name: 'Robert Atkins',\r\n        position: 'Developer',\r\n        bio: `Mattis molestie a iaculis at erat. Ultricies leo integer malesuada nunc vel risus commodo. \r\n            Nisi est sit amet facilisis.`,\r\n        avatar: img1\r\n    },\r\n    {\r\n        id: 'member-2',\r\n        name: 'Amanda Murphy',\r\n        position: 'Developer',\r\n        bio: `Ligula ullamcorper malesuada proin libero nunc. Scelerisque felis imperdiet proin fermentum. \r\n            Praesent elementum facilisis leo vel fringilla.`,\r\n        avatar: img2\r\n    },\r\n    {\r\n        id: 'member-3',\r\n        name: 'Kirk Miller',\r\n        position: 'CEO & 3D Designer',\r\n        bio: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \r\n            ut labore et dolore magna aliqua.`,\r\n        avatar: img3\r\n    },\r\n    {\r\n        id: 'member-4',\r\n        name: 'Thomas Rodriguez',\r\n        position: 'Developer',\r\n        bio: `Purus sit amet volutpat consequat mauris nunc congue nisi vitae. Vel eros donec ac odio \r\n            tempor orci dapibus ultrices.`,\r\n        avatar: img4\r\n    },\r\n    {\r\n        id: 'member-5',\r\n        name: 'Michele Murphy',\r\n        position: 'Community manager',\r\n        bio: `Hendrerit gravida rutrum quisque non tellus orci ac. Nibh praesent tristique magna sit amet. \r\n            Amet nisl purus in mollis nunc sed id semper risus.`,\r\n        avatar: img5\r\n    },\r\n    {\r\n        id: 'member-6',\r\n        name: 'Lillian Johnson',\r\n        position: 'Social media support manager',\r\n        bio: `Turpis egestas maecenas pharetra convallis posuere morbi leo urna molestie. \r\n            Proin fermentum leo vel orci porta non pulvinar.`,\r\n        avatar: img6\r\n    },\r\n    {\r\n        id: 'member-7',\r\n        name: 'David Cunningham',\r\n        position: 'Animator',\r\n        bio: `Elit eget gravida cum sociis. Viverra mauris in aliquam sem fringilla ut. \r\n            Mi proin sed libero enim. Duis at consectetur lorem donec.`,\r\n        avatar: img7\r\n    },\r\n    {\r\n        id: 'member-8',\r\n        name: 'William Salazar',\r\n        position: 'Product designer, design system',\r\n        bio: `Nulla facilisi nullam vehicula ipsum a arcu cursus vitae congue. \r\n            Dictumst quisque sagittis purus sit amet volutpat consequat mauris.`,\r\n        avatar: img8\r\n    }\r\n];\r\n\r\nexport default team","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// components\r\nimport TeamListItem from './TeamListItem';\r\n\r\n// data placeholder\r\nimport team from '@db/team';\r\n\r\nconst TeamList = ({variant}) => {\r\n    const data = variant === 'preview' ? team.slice(0, 4) : team;\r\n\r\n    return (\r\n        <ul className={styles.list}>\r\n            {\r\n                data.map((item, index) => (\r\n                    <TeamListItem key={index} data={item} index={index}/>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TeamList","export const HEADER_LINKS = [\r\n    {\r\n        name: 'Home',\r\n        links: [\r\n            // {name: 'Home', url: '/', isMain: true},\r\n            {name: 'Home', url: '/', isMain: true}\r\n        ]\r\n    },\r\n   \r\n    {\r\n        name: 'Collections',\r\n        links: [\r\n           \r\n            {name: 'Ranking', url: '/ranking'},\r\n            \r\n        ]\r\n    },\r\n    {\r\n        name: 'Contacts',\r\n        isSingle: true,\r\n        url: '/contacts'\r\n    },\r\n    {\r\n        name: 'Account',\r\n        links: [\r\n            {name: 'Login', url: '/login'},\r\n            {name: 'Profile', url: '/author'},\r\n        ]\r\n    }\r\n];\r\n\r\nexport const FOOTER_LINKS = [\r\n    {\r\n        title: 'My account',\r\n        links: [\r\n            {\r\n                title: 'Profile',\r\n                url: '/login',\r\n            },\r\n            {\r\n                title: 'My Collections',\r\n                url: '/author',\r\n            },\r\n            {\r\n                title: 'Connect wallet',\r\n                url: '/connect-wallet',\r\n            },\r\n            {\r\n                title: 'Settings',\r\n                url: '/profile',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Resources',\r\n        links: [\r\n            {\r\n                title: 'Help center',\r\n                url: '/faq',\r\n            },\r\n            {\r\n                title: 'Activity',\r\n                url: '/activity',\r\n            },\r\n            {\r\n                title: 'Ranking',\r\n                url: '/ranking',\r\n            },\r\n            {\r\n                title: 'News',\r\n                url: '/blog-grid',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Company',\r\n        links: [\r\n            {\r\n                title: 'About',\r\n                url: '/about',\r\n            },\r\n            {\r\n                title: 'Our team',\r\n                url: '/team',\r\n            },\r\n            {\r\n                title: 'Blog',\r\n                url: '/blog-sidebar',\r\n            },\r\n            {\r\n                title: 'Contact us',\r\n                url: '/contacts',\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const SOCIAL_LINKS = [\r\n    {\r\n        icon: 'twitter',\r\n        url: 'https://twitter.com/',\r\n        name: 'Twitter'\r\n    },\r\n    {\r\n        icon: 'facebook',\r\n        url: 'https://facebook.com/',\r\n        name: 'Facebook'\r\n    },\r\n    {\r\n        icon: 'instagram',\r\n        url: 'https://instagram.com/',\r\n        name: 'Instagram'\r\n    },\r\n    {\r\n        icon: 'youtube',\r\n        url: 'https://youtube.com/',\r\n        name: 'Youtube'\r\n    },\r\n    {\r\n        icon: 'telegram',\r\n        url: 'https://telegram.com/',\r\n        name: 'Telegram'\r\n    },\r\n    {\r\n        icon: 'discord',\r\n        url: 'https://discord.com/',\r\n        name: 'Discord'\r\n    },\r\n    {\r\n        icon: 'linkedin',\r\n        url: 'https://linkedin.com/',\r\n        name: 'Linkedin'\r\n    }\r\n];\r\n\r\nexport const PROFILE_SOCIAL_LINKS = [\r\n    {\r\n        icon: 'discord',\r\n        url: 'https://discord.com/',\r\n        name: 'Discord'\r\n    },\r\n   \r\n    {\r\n        icon: 'instagram',\r\n        url: 'https://instagram.com/',\r\n        name: 'Instagram'\r\n    }\r\n];","// components\r\nimport Title from '@components/Title';\r\nimport PageHeader from '@components/PageHeader';\r\nimport TeamList from '@components/TeamList';\r\n\r\nconst Team = () => {\r\n    return (\r\n        <>\r\n            <Title title=\"Team\"/>\r\n            <PageHeader title=\"Our team\"/>\r\n            <main>\r\n                <section>\r\n                    <div className=\"container\">\r\n                        <TeamList />\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Team","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgVerified(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_486_3508)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.8221 5.15812C16.199 4.37108 16.1456 3.41762 15.4986 2.7707L15.2293 2.50139C14.5824 1.85447 13.6033 1.75154 12.8419 2.17793C12.3061 2.47802 11.1721 1.85404 11.0881 1.44986C10.9118 0.601056 10.0927 0 9.18378 0L8.721 0.023508C7.65677 0.07758 6.82164 0.956232 6.82164 2.02183C6.858 2.484 6.066 2.826 5.60596 2.52533C4.8164 1.73578 3.53628 1.73578 2.74673 2.52533L2.52529 2.74676C1.84824 3.42385 1.76958 4.45097 2.23603 5.2416C2.556 5.78398 2.24399 6.74399 1.71832 6.87323C0.761796 7.10842 0 7.812 0 8.84873V9.18342C0 10.1016 0.668808 10.7866 1.50077 11.0817C2.36398 11.388 2.2959 12.6542 2.20741 12.8059C1.75594 13.58 1.86188 14.5898 2.52533 15.2532L2.74676 15.4747C3.40686 16.1348 4.39272 16.2117 5.18245 15.7993C5.74801 15.504 6.80404 16.056 6.89162 16.5073C7.06136 17.3818 7.90996 18 8.84351 18H9.13158C10.0468 18 10.8217 17.3994 11.0836 16.5708C11.2549 16.0289 12.084 15.48 12.9089 15.827C13.6936 16.1571 14.6601 16.0678 15.2733 15.4546L15.4747 15.2532C16.2643 14.4637 16.2643 13.1836 15.4747 12.394C15.12 12.072 15.576 11.184 15.9782 11.1784C17.0949 11.1784 18 10.2731 18 9.15653V8.81039C18 7.88062 17.3828 7.05132 16.5141 6.86041C15.93 6.732 15.633 5.553 15.8221 5.15812Z\",\n    fill: \"#FCB808\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.42522 11.7479L5.07906 9.40177C4.79787 9.12057 4.79787 8.6647 5.07906 8.38354C5.36026 8.10235 5.81612 8.10235 6.09728 8.38354L7.93433 10.2206L11.9028 6.25216C12.1839 5.97096 12.6398 5.97096 12.921 6.25216C13.2021 6.53335 13.2022 6.98922 12.921 7.27038L8.44348 11.7479C8.14802 12 7.62005 11.964 7.42522 11.7479Z\",\n    fill: \"#161616\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_486_3508\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVerified);\nexport default __webpack_public_path__ + \"static/media/verified.7e3a45e92ce37f070238a1ef22e3f081.svg\";\nexport { ForwardRef as ReactComponent };","// components\r\nimport LazyImage from '@components/LazyImage';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport {memo} from 'react';\r\n\r\n// assets\r\nimport verified from '@assets/icons/verified.svg';\r\n\r\nconst Avatar = ({src, alt, size, isVerified, className}) => {\r\n    return (\r\n        <div className={classNames('avatar-wrapper', size, className)}>\r\n            <LazyImage className=\"avatar\" src={src} alt={alt}/>\r\n            {\r\n                isVerified &&\r\n                <LazyImage className=\"verified\" src={verified} alt=\"verified\" effect=\"opacity\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nAvatar.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    size: PropTypes.oneOf(['xs', 'sm', 'md']),\r\n    isVerified: PropTypes.bool\r\n}\r\n\r\nexport default memo(Avatar);","import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import { useRef } from 'react';\nimport useEffectOnce from './useEffectOnce';\nvar useUnmount = function (fn) {\n    var fnRef = useRef(fn);\n    // update the ref each render so if it change the newest callback will be invoked\n    fnRef.current = fn;\n    useEffectOnce(function () { return function () { return fnRef.current(); }; });\n};\nexport default useUnmount;\n","import { useCallback, useRef, useState } from 'react';\nimport useUnmount from './useUnmount';\nvar useRafState = function (initialState) {\n    var frame = useRef(0);\n    var _a = useState(initialState), state = _a[0], setState = _a[1];\n    var setRafState = useCallback(function (value) {\n        cancelAnimationFrame(frame.current);\n        frame.current = requestAnimationFrame(function () {\n            setState(value);\n        });\n    }, []);\n    useUnmount(function () {\n        cancelAnimationFrame(frame.current);\n    });\n    return [state, setRafState];\n};\nexport default useRafState;\n","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect } from 'react';\nimport useRafState from './useRafState';\nimport { isBrowser, off, on } from './misc/util';\nvar useWindowSize = function (initialWidth, initialHeight) {\n    if (initialWidth === void 0) { initialWidth = Infinity; }\n    if (initialHeight === void 0) { initialHeight = Infinity; }\n    var _a = useRafState({\n        width: isBrowser ? window.innerWidth : initialWidth,\n        height: isBrowser ? window.innerHeight : initialHeight,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        if (isBrowser) {\n            var handler_1 = function () {\n                setState({\n                    width: window.innerWidth,\n                    height: window.innerHeight,\n                });\n            };\n            on(window, 'resize', handler_1);\n            return function () {\n                off(window, 'resize', handler_1);\n            };\n        }\n    }, []);\n    return state;\n};\nexport default useWindowSize;\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","value","className","_jsx","concat","children","icon","name","map","link","url","styles","href","target","rel","_ref$index","index","_ref$type","type","props","delay","_objectWithoutProperties","_excluded","_useInView","useInView","threshold","triggerOnce","_useInView2","_slicedToArray","ref","inView","common","config","duration","mass","tension","friction","spring","slide","useSpring","_objectSpread","from","transform","opacity","to","fade","grow","animated","style","data","isHorizontal","useWindowSize","width","position","avatar","bio","Spring","_jsxs","Avatar","src","alt","Socials","id","variant","team","item","TeamListItem","HEADER_LINKS","links","isMain","isSingle","SOCIAL_LINKS","_Fragment","Title","title","PageHeader","TeamList","size","isVerified","classNames","LazyImage","verified","effect","memo","useEffect","fn","fnRef","useRef","current","useEffectOnce","initialState","frame","_a","useState","state","setState","setRafState","useCallback","cancelAnimationFrame","requestAnimationFrame","useUnmount","isBrowser","window","initialWidth","initialHeight","Infinity","useRafState","innerWidth","height","innerHeight","handler_1","obj","args","_i","arguments","length","addEventListener","apply","on","removeEventListener","off","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","Object","keys","sort","filter","key","root","has","set","toString","get","observe","element","callback","fallbackInView","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","disconnect","isPlainChildren","React","_state$entry","rootMargin","skip","initialInView","onChange","_React$useState","_React$useState2","setRef","_React$useState3","_React$useState4","entryTarget","previousEntryTarget","result"],"sourceRoot":""}