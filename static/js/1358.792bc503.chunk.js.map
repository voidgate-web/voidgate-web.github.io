{"version":3,"file":"static/js/1358.792bc503.chunk.js","mappings":"wJAwDA,IA/CsB,SAAHA,GAAiE,IAA5DC,EAAID,EAAJC,KAAIC,EAAAF,EAAEG,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAEE,EAASJ,EAATI,UAASC,EAAAL,EAAEM,WAAAA,OAAU,IAAAD,GAAQA,EAAEE,EAAKP,EAALO,MACpEC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAa1B,OANAG,EAAAA,EAAAA,YAAU,WAGN,OAFAD,GAAW,GAEJ,kBAAMA,GAAW,EAAO,CACnC,GAAG,KAGCE,EAAAA,EAAAA,KAAA,QAAMnB,UAAWA,GAAwB,GAAGoB,SAErCJ,IACIG,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,CACLtB,OAAQa,GAAYb,EACpBuB,UACIC,EAAAA,EAAAA,MAAA,QAAAH,SAAA,CAAM,OACFlB,IACAiB,EAAAA,EAAAA,KAAA,UAAQnB,UAAU,eAAewB,QApBvC,SAAAC,GACjBA,EAAEC,iBACFb,GAAY,EAChB,EAiBkFO,SAAC,iBAGhEO,WAAY,kBAAMlB,GAAcD,EAAU,EAC1CL,MAAOA,EAAMiB,SAEZvB,KAMxB,C,mFC7CA,EAA4B,yBAA5B,EAA+D,uBAA/D,EAA8F,qBAA9F,EAA0H,oBAA1H,EAAqJ,oBAArJ,EAAqL,yBAArL,EAAsN,qB,gCCsCtN,EA9BmB,WACf,IAAA+B,GAAuBC,EAAAA,EAAAA,KAAYC,GAAAvB,EAAAA,EAAAA,GAAAqB,EAAA,GAA5BG,EAAGD,EAAA,GAAG3B,EAAK2B,EAAA,GAAL3B,MAEb,OACIoB,EAAAA,EAAAA,MAAA,OAAKvB,UAAS,GAAAgC,OAAKC,EAAgB,iBAAgBb,SAAA,EAC/CG,EAAAA,EAAAA,MAAA,OAAKvB,UAAWiC,EAAab,SAAA,EACzBD,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAgB,KAAAD,OAAIC,EAAW,8BAC7C,aAAW,gBAAeb,UAC9BD,EAAAA,EAAAA,KAAA,KAAGnB,UAAU,4BAEjBmB,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAY,KAAAD,OAAIC,EAAW,OAAOF,IAAKA,EAAIX,UAC7DD,EAAAA,EAAAA,KAACe,EAAAA,EAAa,CAACC,QAAS,EAAGtC,KAAK,6DACjBM,MAAOA,UAG9BgB,EAAAA,EAAAA,KAAA,QAAMnB,UAAWiC,KACjBV,EAAAA,EAAAA,MAAA,OAAKvB,UAAWiC,EAAab,SAAA,EACzBD,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAY,KAAAD,OAAIC,EAAW,OAAMb,UACnDD,EAAAA,EAAAA,KAACe,EAAAA,EAAa,CAACC,QAAS,EAAGtC,KAAK,+CACjBM,MAAOA,OAE1BgB,EAAAA,EAAAA,KAAA,UAAQnB,UAAS,GAAAgC,OAAKC,EAAgB,KAAAD,OAAIC,EAAW,8BAC7C,aAAW,YAAWb,UAC1BD,EAAAA,EAAAA,KAAA,KAAGnB,UAAU,iCAKjC,C","sources":["components/CollapsedText.jsx","webpack://voigate/./src/layout/post/Navigation/style.module.scss?e90f","layout/post/Navigation/index.jsx"],"sourcesContent":["// components\r\nimport Truncate from 'react-truncate';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CollapsedText = ({text, lines = 2, className, withButton = false, width}) => {\r\n    const [truncated, setTruncated] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    const handleExpand = e => {\r\n        e.preventDefault();\r\n        setExpanded(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMounted(true);\r\n\r\n        return () => setMounted(false);\r\n    }, []);\r\n\r\n    return (\r\n        <span className={className ? className : ''}>\r\n           {\r\n               mounted && (\r\n                   <Truncate\r\n                       lines={!expanded && lines}\r\n                       ellipsis={(\r\n                           <span>... {\r\n                               withButton &&\r\n                               <button className=\"text-divider\" onClick={handleExpand}>Read more</button>}\r\n                    </span>\r\n                       )}\r\n                       onTruncate={() => setTruncated(!truncated)}\r\n                       width={width}\r\n                   >\r\n                       {text}\r\n                   </Truncate>\r\n               )\r\n           }\r\n        </span>\r\n    )\r\n}\r\n\r\nCollapsedText.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    lines: PropTypes.number,\r\n    className: PropTypes.string,\r\n    withButton: PropTypes.bool,\r\n    width: PropTypes.number.isRequired\r\n}\r\n\r\nexport default CollapsedText","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__0DRFa\",\"divider\":\"style_divider__HEF7T\",\"title\":\"style_title__QWUor\",\"next\":\"style_next__00kwh\",\"prev\":\"style_prev__8j+h2\",\"navigator\":\"style_navigator__SBSgS\",\"block\":\"style_block__Re7bG\"};","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// components\r\nimport CollapsedText from '@components/CollapsedText';\r\n\r\n// hooks\r\nimport useMeasure from 'react-use-measure';\r\n\r\nconst Navigation = () => {\r\n    const [ref, {width}] = useMeasure();\r\n\r\n    return (\r\n        <div className={`${styles.container} post-section`}>\r\n            <div className={styles.block}>\r\n                <button className={`${styles.navigator} ${styles.prev} navigator navigator--prev`}\r\n                        aria-label=\"Previous post\">\r\n                    <i className=\"icon icon-angle-left\" />\r\n                </button>\r\n                <button className={`${styles.title} ${styles.prev} h5`} ref={ref}>\r\n                    <CollapsedText maxLine={2} text=\"The rise of the non fungible token internet having trouble\"\r\n                                   width={width} />\r\n                </button>\r\n            </div>\r\n            <span className={styles.divider}/>\r\n            <div className={styles.block}>\r\n                <button className={`${styles.title} ${styles.next} h5`}>\r\n                    <CollapsedText maxLine={2} text=\"Guide to creating & selling digital art NFTs\"\r\n                                   width={width} />\r\n                </button>\r\n                <button className={`${styles.navigator} ${styles.next} navigator navigator--next`}\r\n                        aria-label=\"Next post\">\r\n                    <i className=\"icon icon-angle-right\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation"],"names":["_ref","text","_ref$lines","lines","className","_ref$withButton","withButton","width","_useState","useState","_useState2","_slicedToArray","truncated","setTruncated","_useState3","_useState4","expanded","setExpanded","_useState5","_useState6","mounted","setMounted","useEffect","_jsx","children","Truncate","ellipsis","_jsxs","onClick","e","preventDefault","onTruncate","_useMeasure","useMeasure","_useMeasure2","ref","concat","styles","CollapsedText","maxLine"],"sourceRoot":""}