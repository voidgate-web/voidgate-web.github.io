{"version":3,"file":"static/js/5584.3cae3daf.chunk.js","mappings":"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","sources":["components/Spring.jsx","webpack://voigate/./src/components/Video/style.module.scss?f9e4","components/Video/index.jsx","webpack://voigate/./src/layout/faq/FAQLayout/style.module.scss?2b0f","layout/faq/Sidebar.jsx","layout/faq/QuestionsList/style.js","layout/faq/QuestionsList/index.jsx","db/faq.js","layout/faq/FAQLayout/index.jsx","pages/FAQ.jsx","ui/Checkbox.jsx","ui/GradientBtn.jsx","webpack://voigate/./src/ui/ResetFilters/style.module.scss?cf27","ui/ResetFilters/index.jsx","webpack://voigate/./src/ui/SearchForm/style.module.scss?ce5e","ui/SearchForm/index.jsx","ui/StyledAccordion.jsx","ui/StyledModal.jsx","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["// components\r\nimport {animated, useSpring} from '@react-spring/web';\r\n\r\n// hooks\r\nimport {useInView} from 'react-intersection-observer';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Spring = ({children, index = 1, className, type = 'slide', delay, ...props}) => {\r\n    const [ref, inView] = useInView({\r\n        threshold: 0.2,\r\n        triggerOnce: true\r\n    });\r\n\r\n    const common = {\r\n        config: {duration: 300, mass: 1, tension: 300, friction: 30},\r\n        delay: props.delay ? props.delay : 100 * index,\r\n    }\r\n\r\n    const slide = useSpring({\r\n        from: {transform: 'translateY(40px)', opacity: 0},\r\n        to: {transform: inView ? 'translateY(0px)' : 'translateY(40px)', opacity: inView ? 1 : 0},\r\n        ...common,\r\n        ...props\r\n    });\r\n\r\n    const fade = useSpring({\r\n        from: {opacity: 0},\r\n        to: {opacity: inView ? 1 : 0},\r\n        ...common,\r\n        ...props\r\n    });\r\n\r\n    const grow = useSpring({\r\n        from: {transform: 'scale(0.4)'},\r\n        to: {transform: inView ? 'scale(1)' : 'scale(0.4)'},\r\n        ...common,\r\n        ...props\r\n    });\r\n\r\n    const spring = {\r\n        slide,\r\n        fade,\r\n        grow\r\n    }\r\n\r\n    return (\r\n        <animated.div className={className ? className : ''} style={spring[type]} ref={ref}>\r\n            {children}\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nSpring.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    index: PropTypes.number,\r\n    className: PropTypes.string,\r\n    type: PropTypes.oneOf(['slide', 'fade', 'grow']),\r\n    delay: PropTypes.number\r\n}\r\n\r\nexport default Spring","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__lNgen\",\"img\":\"style_img__iPMov\"};","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// components\r\nimport LazyImage from '@components/LazyImage';\r\nimport GradientBtn from '@ui/GradientBtn';\r\nimport YouTube from 'react-youtube';\r\nimport StyledModal from '@ui/StyledModal';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport {useState} from 'react';\r\n\r\nconst Video = ({cover, id = '5_Blq9W9cT8'}) => {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    return (\r\n        <div className={`${styles.container} video-container border-10`}>\r\n            <LazyImage className={styles.img} src={cover} alt=\"Video cover\" />\r\n            <GradientBtn className=\"btn--play\" tag=\"button\" onClick={() =>  setModalOpen(true)} aria-label=\"Play video\">\r\n                <i className=\"icon icon-play-solid\" />\r\n            </GradientBtn>\r\n            <StyledModal open={modalOpen} onClose={() => setModalOpen(false)} classes={{root: 'video-container'}}>\r\n                <YouTube className=\"border-10\"\r\n                         videoId={id}\r\n                         opts={{playerVars: {autoplay: 1, mute: 1}}}\r\n                         onEnd={() => setModalOpen(false)} />\r\n            </StyledModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nVideo.propTypes = {\r\n    cover: PropTypes.string.isRequired,\r\n    id: PropTypes.string\r\n}\r\n\r\nexport default Video","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__S8aDP\"};","// components\r\nimport ResponsiveSidebar from '@ui/ResponsiveSidebar';\r\nimport SearchForm from '@ui/SearchForm';\r\nimport Checkbox from '@ui/Checkbox';\r\nimport {Fragment} from 'react';\r\nimport ResetFilters from '@ui/ResetFilters';\r\n\r\n// hooks\r\nimport {useFilterContext} from '@contexts/filterContext';\r\nimport {useWindowSize} from 'react-use';\r\n\r\nconst Sidebar = () => {\r\n    const {search, setQuery, filters, changeFilters} = useFilterContext();\r\n    const isTablet = useWindowSize().width < 1170;\r\n    const SidebarWrapper = isTablet ? ResponsiveSidebar : Fragment;\r\n\r\n    const categories = [\r\n        {name: 'Ethereum', label: 'eth'},\r\n        {name: 'Getting started', label: 'start'},\r\n        {name: 'Account questions', label: 'account'},\r\n        {name: 'NFT', label: 'nft'},\r\n        {name: 'Pre-sale questions', label: 'sale'},\r\n        {name: 'User safety', label: 'safety'},\r\n        {name: 'Partners', label: 'partners'},\r\n        {name: 'Developers', label: 'devs'},\r\n    ];\r\n\r\n    return (\r\n        <SidebarWrapper>\r\n            <div className=\"sidebar\">\r\n                <div className=\"sidebar_wrapper\">\r\n                    <div className=\"sidebar_block\">\r\n                        <h5>Search</h5>\r\n                        <SearchForm placeholder=\"Type your question\" value={search} handler={setQuery}/>\r\n                    </div>\r\n                    <div className=\"sidebar_block\">\r\n                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                            <h5>Categories</h5>\r\n                            <ResetFilters/>\r\n                        </div>\r\n                        <ul className=\"sidebar_list\">\r\n                            {\r\n                                categories.map(category => (\r\n                                    <li className=\"sidebar_list-item\" key={category.label}>\r\n                                        <Checkbox id={category.label}\r\n                                                  checked={filters.includes(category.label)}\r\n                                                  onChange={() => changeFilters(category.label)}/>\r\n                                        <label htmlFor={category.label}>{category.name}</label>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </SidebarWrapper>\r\n    );\r\n}\r\n\r\nexport default Sidebar","import styled from 'styled-components/macro';\r\n\r\nimport {StyledAccordionSummary, StyledAccordionDetails} from '@ui/StyledAccordion';\r\n\r\nexport const Summary = styled(StyledAccordionSummary)`\r\n  .MuiAccordionSummary-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 20px;\r\n    margin: 15px 0 !important;\r\n\r\n    * {\r\n      transition: all var(--transition);\r\n    }\r\n\r\n    .icon {\r\n      will-change: transform;\r\n      font-size: 18px;\r\n    }\r\n\r\n    &.Mui-expanded {\r\n      margin: 15px 0 10px !important;\r\n\r\n      .icon {\r\n        transform: rotate(180deg);\r\n      }\r\n\r\n      .title, .icon {\r\n        color: var(--accent);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .MuiAccordionSummary-content {\r\n      margin: 25px 0 !important;\r\n\r\n      &.Mui-expanded {\r\n        margin: 25px 0 10px !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Details = styled(StyledAccordionDetails)`\r\n  margin: 0 0 15px 0 !important;\r\n  color: var(--text) !important;\r\n\r\n  .text {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .list {\r\n    padding-left: 20px;\r\n\r\n    .list-item .marker {\r\n      margin-right: 8px;\r\n    }\r\n  }\r\n\r\n  .video-container {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin: 0 0 25px 0 !important;\r\n\r\n    .text {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .video-container {\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","// styled components\r\nimport {Summary, Details} from './style';\r\nimport {StyledAccordion} from '@ui/StyledAccordion';\r\n\r\n// components\r\nimport Video from '@components/Video';\r\nimport StickyFilterBar from '@ui/StickyFilterBar';\r\nimport Spring from '@components/Spring';\r\nimport NothingFound from '@components/NothingFound';\r\n\r\n// hooks\r\nimport {useWindowSize} from 'react-use';\r\n\r\nconst QuestionsList = ({data}) => {\r\n    const isTablet = useWindowSize().width < 1170;\r\n\r\n    return (\r\n        <>\r\n            {isTablet && <StickyFilterBar text=\"Menu\" bottom=\"#faq\"/>}\r\n            <div id=\"faq\">\r\n                {\r\n                    data.length !== 0 ?\r\n                        data.map((item, index) => (\r\n                            <Spring className=\"border-bottom\" key={`accordion${index}`} index={index}>\r\n                                <StyledAccordion>\r\n                                    <Summary aria-controls={`panel${index}-content`} id={`panel${index}-header`}>\r\n                                        <h5 className=\"title\">{item.question}</h5>\r\n                                        <i className=\"icon icon-angle-down text-light\"/>\r\n                                    </Summary>\r\n                                    <Details>\r\n                                        {\r\n                                            item.layout.map((block, index) => {\r\n                                                    const {text, video, list} = item.answer;\r\n\r\n                                                    switch (block) {\r\n                                                        case 'list':\r\n                                                            return (\r\n                                                                <ul className=\"list d-flex flex-column g-5\"\r\n                                                                    key={`list${index}`}>\r\n                                                                    {\r\n                                                                        list.map((item, index) => (\r\n                                                                            <li className=\"list-item\"\r\n                                                                                key={`listItem${index}`}>\r\n                                                                                <span\r\n                                                                                    className=\"marker text-accent\">{index + 1}.</span>\r\n                                                                                {item}\r\n                                                                            </li>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </ul>\r\n                                                            );\r\n                                                        case 'video':\r\n                                                            return (\r\n                                                                <Video key={`video${index}`} cover={video.cover}\r\n                                                                       id={video.id}/>\r\n                                                            );\r\n                                                        default:\r\n                                                        case 'text':\r\n                                                            return (\r\n                                                                <p key={`text${index}`} className=\"text\">{text}</p>\r\n                                                            );\r\n                                                    }\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Details>\r\n                                </StyledAccordion>\r\n                            </Spring>\r\n                        ))\r\n                        : <NothingFound/>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QuestionsList","import cover1 from '@assets/faq/cover1.webp';\r\nimport cover2 from '@assets/faq/cover2.webp';\r\nimport cover3 from '@assets/faq/cover3.webp';\r\n\r\nconst faq = [\r\n    {\r\n        question: 'What is a non-fungible token (NFT)?',\r\n        answer: {\r\n            text: `A non-fungible token (NFT) is a unit of data stored on a digital ledger, called a blockchain,\r\n             that certifies a digital asset to be unique and therefore not interchangeable. NFTs can be used to\r\n             represent items such as photos, videos, audio, and other types of digital files.`\r\n        },\r\n        categories: ['start', 'nft'],\r\n        layout: ['text']\r\n    },\r\n    {\r\n        question: 'How do I create an VoidGate account?',\r\n        answer: {\r\n            text: `Nulla facilisi morbi tempus iaculis urna id volutpat lacus. Nunc sed augue lacus viverra.\r\n             Eget egestas purus viverra accumsan in nisl. Ullamcorper velit sed ullamcorper morbi. Amet risus nullam \r\n             eget felis eget nunc lobortis mattis aliquam. Sit amet commodo nulla facilisi nullam vehicula.`,\r\n            list: [\r\n                'Digital Currency (ETH)',\r\n                'Crypto Wallet',\r\n                'Connecting to NftLand',\r\n            ],\r\n            video: {\r\n                id: 'UdE4GGbgSVc',\r\n                cover: cover1,\r\n            }\r\n        },\r\n        categories: ['start', 'account', 'safety'],\r\n        layout: ['text', 'list', 'video']\r\n    },\r\n    {\r\n        question: 'What is a crypto wallet?',\r\n        answer: {\r\n            text: `Praesent egestas ipsum ut enim pretium luctus. Praesent commodo mi orci. Nunc nibh metus, rhoncus a\r\n             euismod vel, consectetur a eros. Pellentesque habitant morbi tristique senectus et netus et malesuada fames \r\n             ac turpis egestas. Nullam ac turpis nec sapien cursus auctor. Lorem ipsum dolor sit amet, consectetur \r\n             adipiscing elit. Aenean eu erat ligula.`\r\n        },\r\n        categories: ['nft', 'account', 'eth'],\r\n        layout: ['text']\r\n    },\r\n    {\r\n        question: 'How do I convert crypto to my local currency?',\r\n        answer: {\r\n            text: `Donec lobortis feugiat felis, quis placerat diam efficitur non. Quisque id tempor risus, eu egestas \r\n            dolor. Donec ut posuere sem. Cras porta risus odio, id varius purus eleifend id. Pellentesque habitant morbi \r\n            tristique senectus et netus et malesuada fames ac turpis egestas. Etiam sed dapibus tortor, vel pulvinar elit. \r\n            Aliquam iaculis tincidunt magna sed iaculis. Integer blandit sodales ultricies. Nullam vel malesuada purus. \r\n            Sed eu posuere tortor. Suspendisse posuere faucibus nibh, quis dapibus est eleifend tempor. Morbi sed ligula \r\n            interdum, pretium urna et, aliquam est. Donec mi justo, sodales a mattis eget, interdum vitae eros.`,\r\n            list: [\r\n                'Connect your wallet',\r\n                'Select the currency you want to convert',\r\n                'Enter the amount you want to convert',\r\n                'Click on the “Convert” button',\r\n            ]\r\n        },\r\n        categories: ['start', 'safety', 'eth'],\r\n        layout: ['text', 'list']\r\n    },\r\n    {\r\n        question: 'How do I purchase Ethereum (ETH)?',\r\n        answer: {\r\n            text: `Suspendisse potenti. Vivamus id diam a urna congue congue et id velit. Morbi elementum sem ac nunc \r\n            congue, a lobortis lorem fermentum. Nulla at feugiat mauris. Nulla at interdum lacus, ac finibus lectus. \r\n            Integer ac hendrerit nunc. Ut faucibus nisi vitae massa convallis, in lacinia elit cursus. Ut tellus elit, \r\n            sodales ut turpis luctus, eleifend congue est. Donec tincidunt semper urna, et euismod mauris sodales vel. \r\n            Maecenas a magna eu nibh varius convallis. Ut tempus vulputate tellus vel venenatis. Etiam vitae \r\n            pellentesque diam.`\r\n        },\r\n        categories: ['partners', 'eth'],\r\n        layout: ['text']\r\n    },\r\n    {\r\n        question: 'What currencies can I use on VoidGate?',\r\n        answer: {\r\n            text: `Praesent egestas ipsum ut enim pretium luctus. Praesent commodo mi orci. Nunc nibh metus, rhoncus a\r\n             euismod vel, consectetur a eros. Pellentesque habitant morbi tristique senectus et netus et malesuada fames \r\n             ac turpis egestas. Nullam ac turpis nec sapien cursus auctor. Lorem ipsum dolor sit amet, consectetur \r\n             adipiscing elit. Aenean eu erat ligula.`,\r\n            list: [\r\n                'Ethereum (ETH)',\r\n                'Bitcoin (BTC)',\r\n                'Tether (USDT)',\r\n                'Binance Coin (BNB)',\r\n                'Cardano (ADA)',\r\n            ],\r\n            video: {\r\n                id: 'Wjt6yyNDWmc',\r\n                cover: cover2,\r\n            }\r\n        },\r\n        categories: ['eth', 'partners'],\r\n        layout: ['text', 'list', 'video']\r\n    },\r\n    {\r\n        question: 'How do I log out of my VoidGate account or switch crypto wallets?',\r\n        answer: {\r\n            text: `Cras feugiat sodales augue, non suscipit libero volutpat ac. Morbi id venenatis tortor, id imperdiet \r\n            turpis. Donec hendrerit hendrerit erat eget efficitur. Fusce non enim massa. Pellentesque cursus tellus nec \r\n            accumsan suscipit. Pellentesque auctor interdum condimentum. Ut hendrerit nunc vitae venenatis tincidunt. \r\n            Integer quis venenatis nisl, ut pellentesque elit. Morbi dui mauris, faucibus eget sagittis nec, posuere eu nunc.`,\r\n            list: [\r\n                'Click on your profile picture',\r\n                'Click on “Log out”',\r\n                'Click on “Switch wallet”',\r\n                'Select the wallet you want to connect',\r\n            ]\r\n        },\r\n        categories: ['start', 'account', 'devs'],\r\n        layout: ['text', 'list']\r\n    },\r\n    {\r\n        question: 'Why can\\'t I see my NFTs in my account?',\r\n        answer: {\r\n            text: `Suspendisse eu arcu imperdiet, mattis odio eget, malesuada dolor. Integer posuere felis ac diam \r\n            tempor venenatis. Vestibulum lobortis, odio a faucibus auctor, tellus tortor hendrerit mauris, id ultricies \r\n            ante ante id tellus. Praesent libero sapien, tincidunt sed lacus ut, tempor mattis tellus. Ut ac turpis \r\n            lobortis, tempor eros in, sodales odio. Sed accumsan, metus vitae aliquet accumsan, augue ipsum viverra orci, \r\n            nec dictum urna nibh ac lacus. Nullam vitae ipsum ac metus consequat interdum eget ac sem. Mauris bibendum \r\n            enim sodales tortor euismod, a vulputate massa bibendum.`\r\n        },\r\n        categories: ['nft', 'account', 'eth'],\r\n        layout: ['text']\r\n    },\r\n    {\r\n        question: 'How do I search for NFTs?',\r\n        answer: {\r\n            text: `Praesent egestas ipsum ut enim pretium luctus. Praesent commodo mi orci. Nunc nibh metus, rhoncus a\r\n             euismod vel, consectetur a eros. Pellentesque habitant morbi tristique senectus et netus et malesuada fames \r\n             ac turpis egestas. Nullam ac turpis nec sapien cursus auctor. Lorem ipsum dolor sit amet, consectetur \r\n             adipiscing elit. Aenean eu erat ligula.`,\r\n        },\r\n        categories: ['nft', 'eth', 'sales'],\r\n        layout: ['text']\r\n    },\r\n    {\r\n        question: 'What are the key terms to know in NFTs?',\r\n        answer: {\r\n            text: `Nulla facilisi morbi tempus iaculis urna id volutpat lacus. Nunc sed augue lacus viverra.\r\n             Eget egestas purus viverra accumsan in nisl. Ullamcorper velit sed ullamcorper morbi. Amet risus nullam \r\n             eget felis eget nunc lobortis mattis aliquam. Sit amet commodo nulla facilisi nullam vehicula.`,\r\n            list: [\r\n                'Minting',\r\n                'Burn',\r\n                'Royalties',\r\n                'Secondary market',\r\n                'Whitelist',\r\n                'Auction',\r\n                'Reserve price',\r\n            ]\r\n        },\r\n        categories: ['nft', 'devs', 'sales'],\r\n        layout: ['text', 'list']\r\n    },\r\n    {\r\n        question: 'How can I transfer an NFT via VoidGate?',\r\n        answer: {\r\n            text: `Suspendisse eu arcu imperdiet, mattis odio eget, malesuada dolor. Integer posuere felis ac diam \r\n            tempor venenatis. Vestibulum lobortis, odio a faucibus auctor, tellus tortor hendrerit mauris, id ultricies \r\n            ante ante id tellus. Praesent libero sapien, tincidunt sed lacus ut, tempor mattis tellus. Ut ac turpis \r\n            lobortis, tempor eros in, sodales odio. Sed accumsan, metus vitae aliquet accumsan, augue ipsum viverra orci, \r\n            nec dictum urna nibh ac lacus. Nullam vitae ipsum ac metus consequat interdum eget ac sem. Mauris bibendum \r\n            enim sodales tortor euismod, a vulputate massa bibendum.`,\r\n            list: [\r\n                'Click on “My NFTs”',\r\n                'Click on the NFT you want to transfer',\r\n                'Click on “Transfer”',\r\n                'Enter the wallet address of the recipient',\r\n                'Click on “Transfer”',\r\n            ]\r\n        },\r\n        categories: ['devs', 'eth', 'sales'],\r\n        layout: ['text', 'list']\r\n    },\r\n    {\r\n        question: 'How do I reset my login information?',\r\n        answer: {\r\n            text: `Nulla facilisi morbi tempus iaculis urna id volutpat lacus. Nunc sed augue lacus viverra.\r\n             Eget egestas purus viverra accumsan in nisl. Ullamcorper velit sed ullamcorper morbi. Amet risus nullam \r\n             eget felis eget nunc lobortis mattis aliquam. Sit amet commodo nulla facilisi nullam vehicula.`,\r\n            video: {\r\n                id: 'Wjt6yyNDWmc',\r\n                cover: cover3,\r\n            }\r\n        },\r\n        categories: ['account', 'start'],\r\n        layout: ['text', 'video']\r\n    }\r\n];\r\n\r\nexport default faq","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// components\r\nimport Sidebar from '../Sidebar';\r\nimport QuestionsList from '../QuestionsList';\r\n\r\n// hooks\r\nimport {useFilterContext} from '@contexts/filterContext';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\n\r\n// data placeholder\r\nimport faq from '@db/faq';\r\n\r\nconst FAQLayout = () => {\r\n    const {filterData} = useFilterContext();\r\n    const questions = filterData(faq, 'question');\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className={classNames(`${styles.container} container`, {'align-items-center' : questions.length === 0})}>\r\n                <Sidebar/>\r\n                <QuestionsList data={questions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FAQLayout","// components\r\nimport Title from '@components/Title';\r\nimport PageHeader from '@components/PageHeader';\r\nimport FAQLayout from '@layout/faq/FAQLayout';\r\n\r\n// context\r\nimport {FilterContextAPI} from '@contexts/filterContext';\r\n\r\nconst FAQ = () => {\r\n    return (\r\n        <>\r\n            <Title title=\"Help center\"/>\r\n            <PageHeader title=\"Help center\"/>\r\n            <main>\r\n                <FilterContextAPI>\r\n                    <FAQLayout />\r\n                </FilterContextAPI>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FAQ","// utils\r\nimport PropTypes from 'prop-types';\r\nimport {memo} from 'react';\r\n\r\nconst Checkbox = ({id, onChange, ...props}) => {\r\n    return (\r\n        <div className=\"checkbox\">\r\n            <input id={id} type=\"checkbox\" onChange={onChange} {...props}/>\r\n            <label className=\"d-flex align-items-center justify-content-center\" htmlFor={id}>\r\n                <i className=\"icon icon-check-solid\"/>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nCheckbox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func\r\n}\r\n\r\nexport default memo(Checkbox);","// components\r\nimport {animated, useSpring} from '@react-spring/web';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n// hooks\r\nimport {useState} from 'react';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\n\r\nconst Wrapper = ({tag, href, ...props}) => {\r\n    if (tag === 'button') {\r\n        return <animated.button {...props}/>\r\n    }\r\n\r\n    if (href === undefined || href === '#') {\r\n        return <animated.a {...props}/>\r\n    }\r\n\r\n    const AnimatedNavLink = animated(NavLink);\r\n    return <AnimatedNavLink to={href} {...props}/>\r\n}\r\n\r\nconst GradientBtn = ({className, ...props}) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const variants = {\r\n        static: {background: 'linear-gradient(98.49deg, #05C9F9 -11.31%, #E5F61B 76.26%)'},\r\n        active: {background: 'linear-gradient(98.49deg, #E5F61B -11.31%, #05C9F9 76.26%)'},\r\n    };\r\n\r\n    const {background} = useSpring({\r\n        background: isHovered ? variants.active.background : variants.static.background,\r\n        config: {duration: 300},\r\n        ...props,\r\n    });\r\n\r\n    return (\r\n        <Wrapper className={classNames('btn btn--gradient', className)} {...props}\r\n                         onMouseEnter={() => setIsHovered(true)}\r\n                         onMouseLeave={() => setIsHovered(false)}\r\n                         style={{background, color: '#000000'}}>\r\n            {props.children}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default GradientBtn","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"style_button__fVcK9\",\"visible\":\"style_visible__QRaZm\"};","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// hooks\r\nimport {useFilterContext} from '@contexts/filterContext';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\n\r\nconst ResetFilters = ({text = 'Reset'}) => {\r\n    const {resetFilters, filters} = useFilterContext();\r\n\r\n    return (\r\n        <button className={classNames(styles.button, {[styles.visible]: filters.length > 0})} onClick={resetFilters}>\r\n            {text}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ResetFilters","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"style_form__8UoNd\",\"visible\":\"style_visible__FsOJ-\",\"container\":\"style_container__mLTnG\",\"results\":\"style_results__YxBT7\"};","import styles from './style.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst SearchForm = ({ placeholder = 'Search', className, debounceTime = 300 }) => {\r\n  const [value, setValue] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (value.length > 0) {\r\n      const fetchResults = async () => {\r\n        try {\r\n          const response = await axios.get('https://api-goerli.reservoir.tools/search/collections/v2', {\r\n            params: { name: value },\r\n            headers: { accept: '*/*', 'x-api-key': 'demo-api-key' }\r\n          });\r\n          setResults(response.data.collections);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      fetchResults();\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  }, [value]);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setValue('');\r\n    setResults([]);\r\n  };\r\n\r\n  const handleClick = (result) => {\r\n    navigate(`/author/${result.collectionId}`);\r\n   \r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.container} ${className || ''}`}>\r\n      <form className={`${styles.form} search-form field bg-tertiary`}>\r\n        <input\r\n          className=\"text-overflow\"\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n        {value.length !== 0 && (\r\n          <button\r\n            className={`${styles.clearBtn}`}\r\n            type=\"button\"\r\n            aria-label=\"Clear\"\r\n            onClick={handleReset}\r\n          >\r\n            <i className=\"icon icon-xmark\" />\r\n          </button>\r\n        )}\r\n      </form>\r\n      <ul className={styles.results}>\r\n        {results.map(result => (\r\n          <li key={result.collectionId}>\r\n            <Link to={`/author/${result.collectionId}`} onClick={() => handleClick(result)}>\r\n              {result.name}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","// styling\r\nimport styled from 'styled-components/macro';\r\n\r\n// components\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\n\r\nexport const StyledAccordion = styled(Accordion)`\r\n  background: transparent !important;\r\n  box-shadow: none !important;\r\n  margin: 0 !important;\r\n\r\n  &:before {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const StyledAccordionSummary = styled(AccordionSummary)`\r\n  padding: 0 !important;\r\n  color: var(--text-light) !important;\r\n  min-height: 0 !important;\r\n\r\n  .MuiAccordionSummary-content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0 !important;\r\n\r\n    .icon {\r\n      transition: all var(--transition);\r\n      will-change: transform;\r\n\r\n      &:hover {\r\n        color: var(--accent);\r\n      }\r\n    }\r\n\r\n    &.Mui-expanded .icon {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledAccordionDetails = styled(AccordionDetails)`\r\n  padding: 0 !important;\r\n`;","// styling\r\nimport styled from 'styled-components/macro';\r\n\r\n// components\r\nimport Modal from '@mui/material/Modal';\r\nimport Grow from '@mui/material/Grow';\r\n\r\n// hooks\r\nimport {useEffect} from 'react';\r\nimport useScrollLock from '@hooks/useScrollLock';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalWrapper = styled(Modal)`\r\n  padding: 20px;\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 100000 !important;\r\n\r\n  .MuiBackdrop-root {\r\n    background: rgba(1, 1, 1, .6);\r\n  }\r\n\r\n  .content {\r\n    padding: 30px 20px;\r\n    position: relative;\r\n    flex: 1;\r\n    max-width: 1000px;\r\n    overflow: visible;\r\n    \r\n    .search-form {\r\n      margin: 10px 0;\r\n    }\r\n\r\n    .icon-close {\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 10px;\r\n      font-size: 20px;\r\n      color: var(--divider);\r\n      transition: all var(--transition);\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        color: var(--text-light);\r\n      }\r\n    }\r\n  }\r\n\r\n  &.video-container .content {\r\n    iframe {\r\n      aspect-ratio: 16 / 9;\r\n    }\r\n\r\n    .icon-close {\r\n      top: -10px;\r\n      right: -10px;\r\n      background: var(--accent);\r\n      width: 25px;\r\n      height: 25px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border-radius: 50%;\r\n      font-size: 14px;\r\n      will-change: transform;\r\n\r\n      &:hover {\r\n        transform: scale(1.1);\r\n        color: var(--bg-primary);\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 414px) {\r\n    .content {\r\n      padding: 40px 30px;\r\n\r\n      .icon {\r\n        top: 20px;\r\n        right: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .content {\r\n      padding: 50px 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledModal = ({children, ...props}) => {\r\n    const {lockScroll, unlockScroll} = useScrollLock();\r\n\r\n    useEffect(() => {\r\n        props.open ? lockScroll() : unlockScroll();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.open]);\r\n\r\n    return (\r\n        <ModalWrapper {...props} closeAfterTransition>\r\n            <Grow in={props.open} timeout={300}>\r\n                <div className=\"content bg-tertiary border-10\">\r\n                    <i className=\"icon icon-xmark icon-close\" onClick={props.onClose}/>\r\n                    {children}\r\n                </div>\r\n            </Grow>\r\n        </ModalWrapper>\r\n    );\r\n}\r\n\r\nStyledModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default StyledModal","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","children","_ref$index","index","className","_ref$type","type","props","delay","_objectWithoutProperties","_excluded","_useInView","useInView","threshold","triggerOnce","_useInView2","_slicedToArray","ref","inView","common","config","duration","mass","tension","friction","spring","slide","useSpring","_objectSpread","from","transform","opacity","to","fade","grow","_jsx","animated","style","cover","_ref$id","id","_useState","useState","_useState2","modalOpen","setModalOpen","_jsxs","concat","styles","LazyImage","src","alt","GradientBtn","tag","onClick","StyledModal","open","onClose","classes","root","YouTube","videoId","opts","playerVars","autoplay","mute","onEnd","_useFilterContext","useFilterContext","search","setQuery","filters","changeFilters","SidebarWrapper","useWindowSize","width","ResponsiveSidebar","Fragment","SearchForm","placeholder","value","handler","ResetFilters","name","label","map","category","Checkbox","checked","includes","onChange","htmlFor","Summary","styled","StyledAccordionSummary","withConfig","componentId","Details","StyledAccordionDetails","data","isTablet","_Fragment","StickyFilterBar","text","bottom","length","item","Spring","StyledAccordion","question","layout","block","_item$answer","answer","video","list","Video","NothingFound","categories","questions","filterData","faq","classNames","Sidebar","QuestionsList","Title","title","PageHeader","FilterContextAPI","FAQLayout","memo","Wrapper","href","undefined","AnimatedNavLink","NavLink","_ref2","_excluded2","isHovered","setIsHovered","variants","background","onMouseEnter","onMouseLeave","color","_ref$text","resetFilters","_defineProperty","_ref$placeholder","debounceTime","setValue","_useState3","_useState4","results","setResults","navigate","useNavigate","useEffect","fetchResults","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","params","headers","accept","sent","collections","t0","console","error","stop","apply","arguments","e","target","result","Link","collectionId","handleClick","Accordion","AccordionSummary","AccordionDetails","ModalWrapper","Modal","_useScrollLock","useScrollLock","lockScroll","unlockScroll","closeAfterTransition","Grow","in","timeout","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","isPlainChildren","React","_state$entry","rootMargin","skip","initialInView","_React$useState","_React$useState2","setRef","_React$useState3","_React$useState4","state","setState","current","entryTarget","previousEntryTarget"],"sourceRoot":""}