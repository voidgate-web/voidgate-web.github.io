{"version":3,"file":"static/js/7631.58cd945f.chunk.js","mappings":"+5aAUMA,GAASC,EAAAA,EAAAA,OAAK,kBAAM,4CAAsB,IAC1CC,GAAOD,EAAAA,EAAAA,OAAK,kBAAM,+BAA4B,IAE9CE,EAAUC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,4DAmB1B,EAXqB,WACjB,OACIE,EAAAA,EAAAA,KAACJ,EAAI,CAACK,IAAI,EAAMC,QAAS,IAAKC,UAC1BC,EAAAA,EAAAA,MAACP,EAAO,CAACQ,UAAU,wCAAuCF,SAAA,EACtDH,EAAAA,EAAAA,KAACN,EAAM,CAACW,UAAU,SAASC,cAAeC,KAC1CP,EAAAA,EAAAA,KAAA,MAAIK,UAAU,QAAOF,SAAC,6BAItC,C,2IC3BaK,GAAgBC,EAAAA,EAAAA,oBAAcC,GAE9BC,EAAmB,SAAHC,GAAoB,IAAfT,EAAQS,EAART,SAC9BU,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0CT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAmCC,EAAAA,EAAAA,KAA5BC,EAAUF,EAAVE,WAAYC,EAAYH,EAAZG,aA0CnB,OAbAC,EAAAA,EAAAA,YAAU,WAON,OANAN,EAAgBI,IAAeC,IAE/BE,OAAOC,iBAAiB,UAAU,WAC9BH,GACJ,IAEO,WACHA,GACJ,CAEJ,GAAG,CAACL,KAGAzB,EAAAA,EAAAA,KAACQ,EAAc0B,SAAQ,CAACC,MAAO,CAC3BlB,OAAAA,EACAI,QAAAA,EACAe,WA9BW,SAACC,EAAMC,GACtB,OAAOD,EAAKE,QAAO,SAAAC,GACf,IAAMC,EAAWD,EAAKF,GAAUI,cAAcC,SAAS1B,EAAOyB,gBAA6B,KAAXzB,EAC1E2B,EAAgC,IAAnBvB,EAAQwB,QAAgBL,EAAKM,WAAWC,MAAK,SAAAC,GAAQ,OAAI3B,EAAQsB,SAASK,EAAS,IAEtG,OAAOP,GAAYG,CACvB,GACJ,EAwBQnB,cAAAA,EACAwB,SA9CS,SAACC,GACdhC,EAAUgC,EACd,EA6CQC,cA3Cc,SAACZ,GACflB,EAAQsB,SAASJ,GACjBjB,EAAWD,EAAQkB,QAAO,SAAAa,GAAC,OAAIA,IAAMb,CAAM,KAE3CjB,EAAW,GAAD+B,QAAAC,EAAAA,EAAAA,GAAKjC,GAAO,CAAEkB,IAEhC,EAsCQgB,aApCa,WAAH,OAASjC,EAAW,GAAI,EAqClCkC,YA1BY,WAAH,OAAS9B,GAAiB,EAAM,EA2BzC+B,aAzBa,WAAH,OAAS/B,GAAiB,EAAO,GA0B7CvB,SACGA,GAGb,EAEauD,EAAmB,WAAH,OAASC,EAAAA,EAAAA,YAAWnD,EAAe,C,+FCnEhE,EAAyB,sBAAzB,EAAyD,uB,6GCI5CoD,GAAqBnD,EAAAA,EAAAA,oBAAcC,GAEnCmD,EAAwB,SAAHjD,GAAoB,IAAfT,EAAQS,EAART,SAC7B2D,EAAQC,EAAAA,EACdlD,GAAwBC,EAAAA,EAAAA,UAASkD,EAAAA,GAAAA,IAAmBjD,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CoD,EAAIlD,EAAA,GAAEmD,EAAOnD,EAAA,GACpBI,GAAgCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvC6B,EAAQ5B,EAAA,GAAE+C,EAAW/C,EAAA,GAC5BG,GAA4BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnC6C,EAAM5C,EAAA,GAAE6C,EAAS7C,EAAA,GACxB8C,GAAwBxD,EAAAA,EAAAA,UAAS,MAAKyD,GAAAvD,EAAAA,EAAAA,GAAAsD,EAAA,GAA/BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAoC5D,EAAAA,EAAAA,UAAS,MAAK6D,GAAA3D,EAAAA,EAAAA,GAAA0D,EAAA,GAA3CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAoB1BG,EAlBgBhB,EAAMvB,QAAO,SAAAC,GAC/B,QACKQ,GAAWR,EAAKM,WAAWH,SAASK,EAASb,WAC7CiC,GAAS5B,EAAKuC,SAASpC,SAASyB,EAAOjC,WACvCqC,GAAOhC,EAAKgC,OAASA,EAAKrC,UAEvByC,IAE6B,QAArBA,EAAWzC,QAEc,SAArByC,EAAWzC,MACPK,EAAKwC,OAAS,IACdxC,EAAKwC,OAASJ,EAAWzC,MAAM8C,MAAM,KAAK,IAAMzC,EAAKwC,OAASJ,EAAWzC,MAAM8C,MAAM,KAAK,KAItH,IAEkChB,MAAK,SAACiB,EAAGC,GACvC,MAAmB,YAAflB,EAAK9B,MACE+C,EAAEE,GAAKD,EAAEC,GACM,cAAfnB,EAAK9B,MACL+C,EAAEF,MAAQG,EAAEH,MACG,eAAff,EAAK9B,MACLgD,EAAEH,MAAQE,EAAEF,MACG,cAAff,EAAK9B,MACLgD,EAAEE,MAAQH,EAAEG,MACG,eAAfpB,EAAK9B,MACL+C,EAAEG,MAAQF,EAAEE,WADhB,CAGX,IAEA,OACIrF,EAAAA,EAAAA,KAAC4D,EAAmB1B,SAAQ,CAACC,MAAO,CAChC2C,YAAAA,EACAb,KAAAA,EACAC,QAAAA,EACAlB,SAAAA,EACAmB,YAAAA,EACAC,OAAAA,EACAC,UAAAA,EACAG,KAAAA,EACAC,QAAAA,EACAG,WAAAA,EACAC,cAAAA,GACF1E,SACGA,GAGb,ECSA,EAzD2B,WACvB,IAAAmF,GDiDuC3B,EAAAA,EAAAA,YAAWC,GChD9CK,EAAIqB,EAAJrB,KACAC,EAAOoB,EAAPpB,QACAY,EAAWQ,EAAXR,YACA9B,EAAQsC,EAARtC,SACAmB,EAAWmB,EAAXnB,YACAC,EAAMkB,EAANlB,OACAC,EAASiB,EAATjB,UACAG,EAAIc,EAAJd,KACAC,EAAOa,EAAPb,QACAG,EAAUU,EAAVV,WACAC,EAAaS,EAAbT,cAEEU,GAAaC,EAAAA,EAAAA,GAAcV,EAAa,IAE9C,OACI9E,EAAAA,EAAAA,KAAA,OAAKK,UAAU,eAAcF,UACzBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAoCoF,IAAKF,EAAWG,aAAavF,SAAA,EAC5EC,EAAAA,EAAAA,MAAA,OAAKC,UAAWsF,EAAexF,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWsF,EAAcxF,SAAA,EAC1BH,EAAAA,EAAAA,KAAC4F,EAAAA,EAAY,CAACC,YAAahB,EACbiB,QAASC,EAAAA,GACTC,SAAUpB,EACVqB,YAAY,iBAC1BjG,EAAAA,EAAAA,KAAC4F,EAAAA,EAAY,CAACC,YAAa1B,EACb2B,QAASI,EAAAA,GACTF,SAAUhD,EACViD,YAAY,gBAC1BjG,EAAAA,EAAAA,KAAC4F,EAAAA,EAAY,CAACC,YAAaxB,EACbyB,QAASK,EAAAA,GACTH,SAAU5B,EACV6B,YAAY,YAC1BjG,EAAAA,EAAAA,KAAC4F,EAAAA,EAAY,CAACC,YAAapB,EACbqB,QAASM,EAAAA,GACTJ,SAAUxB,EACVyB,YAAY,UAC1BjG,EAAAA,EAAAA,KAAC4F,EAAAA,EAAY,CAACC,YAAa3B,EACb4B,QAAS9B,EAAAA,GACTgC,SAAU/B,QAE5BjE,EAAAA,EAAAA,KAAA,QAAAG,SAAOoF,EAAWc,kBAEtBjG,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAEQ2E,EAAYjC,OAAS,GACjB7C,EAAAA,EAAAA,KAACsG,EAAAA,EAAS,CAACxC,MAAOyB,EAAWgB,kBAE7BvG,EAAAA,EAAAA,KAACwG,EAAAA,EAAY,IAEpBjB,EAAWkB,QAAU,IAAKzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CAACnB,WAAYA,WAKvE,E,UC9CA,EAhBoB,WAChB,OACInF,EAAAA,EAAAA,MAAAuG,EAAAA,SAAA,CAAAxG,SAAA,EACIH,EAAAA,EAAAA,KAAC4G,EAAAA,EAAK,CAACC,MAAM,aACb7G,EAAAA,EAAAA,KAAC8G,EAAAA,EAAgB,CAACD,MAAM,aACxB7G,EAAAA,EAAAA,KAAA,QAAAG,UACIH,EAAAA,EAAAA,KAAC6D,EAAqB,CAAA1D,UAClBH,EAAAA,EAAAA,KAACW,EAAAA,GAAgB,CAAAR,UACbH,EAAAA,EAAAA,KAAC+G,EAAkB,YAM3C,C","sources":["components/NothingFound.jsx","contexts/filterContext.js","webpack://voigate/./src/layout/explore-grid/style.module.scss?546c","contexts/exploreGridContext.js","layout/explore-grid/index.jsx","pages/ExploreGrid.jsx"],"sourcesContent":["// utils\r\nimport {lazy} from 'react';\r\n\r\n// styling\r\nimport styled from 'styled-components/macro';\r\n\r\n// assets\r\nimport animation from '@assets/lottie/nodata.json';\r\n\r\n// components\r\nconst Lottie = lazy(() => import('lottie-react'));\r\nconst Fade = lazy(() => import('@mui/material/Fade'));\r\n\r\nconst Wrapper = styled.div`\r\n  .lottie {\r\n    width: 50%;\r\n    max-width: 240px;\r\n    margin: 40px 0 20px;\r\n  }\r\n`;\r\n\r\nconst NothingFound = () => {\r\n    return (\r\n        <Fade in={true} timeout={1000}>\r\n            <Wrapper className=\"d-flex flex-column align-items-center\">\r\n                <Lottie className=\"lottie\" animationData={animation}/>\r\n                <h4 className=\"title\">Sorry, nothing found</h4>\r\n            </Wrapper>\r\n        </Fade>\r\n    );\r\n}\r\n\r\nexport default NothingFound","import {createContext, useState, useContext, useEffect} from 'react';\r\nimport useScrollLock from '@hooks/useScrollLock';\r\n\r\nexport const FilterContext = createContext(undefined);\r\n\r\nexport const FilterContextAPI = ({children}) => {\r\n    const [search, setSearch] = useState('');\r\n    const [filters, setFilters] = useState([]);\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n    const {lockScroll, unlockScroll} = useScrollLock();\r\n\r\n    const setQuery = (query) => {\r\n        setSearch(query);\r\n    }\r\n\r\n    const changeFilters = (filter) => {\r\n        if (filters.includes(filter)) {\r\n            setFilters(filters.filter(f => f !== filter));\r\n        } else {\r\n            setFilters([...filters, filter]);\r\n        }\r\n    }\r\n\r\n    const resetFilters = () => setFilters([]);\r\n\r\n    const filterData = (data, selector) => {\r\n        return data.filter(item => {\r\n            const isSearch = item[selector].toLowerCase().includes(search.toLowerCase()) || search === '';\r\n            const isCategory = filters.length === 0 || item.categories.some(category => filters.includes(category));\r\n\r\n            return isSearch && isCategory;\r\n        });\r\n    }\r\n\r\n    const openSidebar = () => setIsSidebarOpen(true);\r\n\r\n    const closeSidebar = () => setIsSidebarOpen(false);\r\n\r\n    useEffect(() => {\r\n        isSidebarOpen ? lockScroll() : unlockScroll();\r\n\r\n        window.addEventListener('resize', () => {\r\n            unlockScroll();\r\n        });\r\n\r\n        return () => {\r\n            unlockScroll();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isSidebarOpen]);\r\n\r\n    return (\r\n        <FilterContext.Provider value={{\r\n            search,\r\n            filters,\r\n            filterData,\r\n            isSidebarOpen,\r\n            setQuery,\r\n            changeFilters,\r\n            resetFilters,\r\n            openSidebar,\r\n            closeSidebar\r\n        }}>\r\n            {children}\r\n        </FilterContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFilterContext = () => useContext(FilterContext);","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"style_select__nHVvY\",\"sorting\":\"style_sorting__IMZRx\"};","import {createContext, useState, useContext} from 'react';\r\n\r\nimport all_items from '@db/all_items';\r\nimport {SORTING_OPTIONS} from '@constants/explore';\r\n\r\nexport const ExploreGridContext = createContext(undefined);\r\n\r\nexport const ExploreGridContextAPI = ({children}) => {\r\n    const items = all_items;\r\n    const [sort, setSort] = useState(SORTING_OPTIONS[0]);\r\n    const [category, setCategory] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n    const [type, setType] = useState(null);\r\n    const [priceRange, setPriceRange] = useState(null);\r\n\r\n    const filteredItems = items.filter(item => {\r\n        return (\r\n            (category ? item.categories.includes(category.value) : true) &&\r\n            (status ? item.statuses.includes(status.value) : true) &&\r\n            (type ? item.type === type.value : true) &&\r\n            (\r\n                priceRange ?\r\n                    (\r\n                        priceRange.value === 'all' ?\r\n                            true :\r\n                            priceRange.value === '100+' ?\r\n                                item.price >= 100 :\r\n                                item.price >= priceRange.value.split('-')[0] && item.price <= priceRange.value.split('-')[1]\r\n                    ) :\r\n                    true\r\n            ))\r\n    });\r\n\r\n    const sortedItems = filteredItems.sort((a, b) => {\r\n        if (sort.value === 'default') {\r\n            return a.id - b.id;\r\n        } else if (sort.value === 'price-asc') {\r\n            return a.price - b.price;\r\n        } else if (sort.value === 'price-desc') {\r\n            return b.price - a.price;\r\n        } else if (sort.value === 'likes-asc') {\r\n            return b.likes - a.likes;\r\n        } else if (sort.value === 'likes-desc') {\r\n            return a.likes - b.likes;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ExploreGridContext.Provider value={{\r\n            sortedItems,\r\n            sort,\r\n            setSort,\r\n            category,\r\n            setCategory,\r\n            status,\r\n            setStatus,\r\n            type,\r\n            setType,\r\n            priceRange,\r\n            setPriceRange\r\n        }}>\r\n            {children}\r\n        </ExploreGridContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useExploreGridContext = () => useContext(ExploreGridContext);\r\n","// styling\r\nimport styles from './style.module.scss';\r\n\r\n// components\r\nimport CustomSelect from '@ui/CustomSelect';\r\nimport ItemsGrid from '@components/ItemsGrid';\r\nimport Pagination from '@ui/Pagination';\r\nimport NothingFound from '@components/NothingFound';\r\n\r\n// hooks\r\nimport usePagination from '@hooks/usePagination';\r\nimport {useExploreGridContext} from '@contexts/exploreGridContext';\r\n\r\n// constants\r\nimport {CATEGORIES, TYPE, STATUS, SORTING_OPTIONS, PRICE_RANGE} from '@constants/explore';\r\n\r\nconst ExploreGridContent = () => {\r\n    const {\r\n        sort,\r\n        setSort,\r\n        sortedItems,\r\n        category,\r\n        setCategory,\r\n        status,\r\n        setStatus,\r\n        type,\r\n        setType,\r\n        priceRange,\r\n        setPriceRange\r\n    } = useExploreGridContext();\r\n    const pagination = usePagination(sortedItems, 12);\r\n\r\n    return (\r\n        <div className=\"section mt-0\">\r\n            <div className=\"container d-flex flex-column g-30\" ref={pagination.containerRef}>\r\n                <div className={styles.sorting}>\r\n                    <div className={styles.select}>\r\n                        <CustomSelect setSelected={setPriceRange}\r\n                                      options={PRICE_RANGE}\r\n                                      selected={priceRange}\r\n                                      placeholder=\"Price range\"/>\r\n                        <CustomSelect setSelected={setCategory}\r\n                                      options={CATEGORIES}\r\n                                      selected={category}\r\n                                      placeholder=\"Categories\"/>\r\n                        <CustomSelect setSelected={setStatus}\r\n                                      options={STATUS}\r\n                                      selected={status}\r\n                                      placeholder=\"Status\"/>\r\n                        <CustomSelect setSelected={setType}\r\n                                      options={TYPE}\r\n                                      selected={type}\r\n                                      placeholder=\"Type\"/>\r\n                        <CustomSelect setSelected={setSort}\r\n                                      options={SORTING_OPTIONS}\r\n                                      selected={sort}/>\r\n                    </div>\r\n                    <span>{pagination.showingOf()}</span>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        sortedItems.length > 0 ?\r\n                            <ItemsGrid items={pagination.currentItems()}/>\r\n                            :\r\n                            <NothingFound/>\r\n                    }\r\n                    {pagination.maxPage > 1 && <Pagination pagination={pagination}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExploreGridContent","// components\r\nimport Title from '@components/Title';\r\nimport SimplePageHeader from '@components/SimplePageHeader';\r\nimport ExploreGridContent from '@layout/explore-grid';\r\n\r\n// context\r\nimport {ExploreGridContextAPI} from '@contexts/exploreGridContext';\r\nimport {FilterContextAPI} from '@contexts/filterContext';\r\n\r\nconst ExploreGrid = () => {\r\n    return (\r\n        <>\r\n            <Title title=\"Explore\" />\r\n            <SimplePageHeader title=\"Explore\" />\r\n            <main>\r\n                <ExploreGridContextAPI>\r\n                    <FilterContextAPI>\r\n                        <ExploreGridContent />\r\n                    </FilterContextAPI>\r\n                </ExploreGridContextAPI>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExploreGrid"],"names":["Lottie","lazy","Fade","Wrapper","styled","componentId","_jsx","in","timeout","children","_jsxs","className","animationData","animation","FilterContext","createContext","undefined","FilterContextAPI","_ref","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","filters","setFilters","_useState5","_useState6","isSidebarOpen","setIsSidebarOpen","_useScrollLock","useScrollLock","lockScroll","unlockScroll","useEffect","window","addEventListener","Provider","value","filterData","data","selector","filter","item","isSearch","toLowerCase","includes","isCategory","length","categories","some","category","setQuery","query","changeFilters","f","concat","_toConsumableArray","resetFilters","openSidebar","closeSidebar","useFilterContext","useContext","ExploreGridContext","ExploreGridContextAPI","items","all_items","SORTING_OPTIONS","sort","setSort","setCategory","status","setStatus","_useState7","_useState8","type","setType","_useState9","_useState10","priceRange","setPriceRange","sortedItems","statuses","price","split","a","b","id","likes","_useExploreGridContex","pagination","usePagination","ref","containerRef","styles","CustomSelect","setSelected","options","PRICE_RANGE","selected","placeholder","CATEGORIES","STATUS","TYPE","showingOf","ItemsGrid","currentItems","NothingFound","maxPage","Pagination","_Fragment","Title","title","SimplePageHeader","ExploreGridContent"],"sourceRoot":""}