{"version":3,"file":"static/js/6150.2f3953c2.chunk.js","mappings":"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","sources":["webpack://voigate/./src/layout/explore/Wrapper/style.module.scss?529f","layout/explore/Wrapper/index.jsx","contexts/exploreContext.js","layout/explore/Sidebar.jsx","webpack://voigate/./src/layout/explore/Items/style.module.scss?47ab","layout/explore/Items/index.jsx","pages/Explore.jsx","ui/Checkbox.jsx","ui/StyledAccordion.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__qyATI\"};","// styling\nimport styles from './style.module.scss';\n\nconst Wrapper = ({children}) => {\n    return (\n        <div className=\"section\">\n            <div className={`${styles.container} container`}>\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default Wrapper","import {createContext, useState, useContext} from 'react';\nimport all_items from '@db/all_items';\nimport {SORTING_OPTIONS, CRYPTO_CURRENCIES} from '@constants/explore';\n\nexport const ExploreContext = createContext(undefined);\n\nexport const ExploreContextAPI = ({children}) => {\n    const items = all_items;\n    const [categories, setCategories] = useState([]);\n    const [statuses, setStatuses] = useState([]);\n    const [itemType, setItemType] = useState('');\n    const [priceRange, setPriceRange] = useState({min: '', max: ''});\n    const [sort, setSort] = useState(SORTING_OPTIONS[0]);\n    const [cryptoCurrency, setCryptoCurrency] = useState(CRYPTO_CURRENCIES[0]);\n    const [applyPriceFilter, setApplyPriceFilter] = useState(false);\n\n    const setChecked = (type, value) => {\n        switch (type) {\n            case 'categories':\n                categories.includes(value) ? setCategories(categories.filter(c => c !== value)) : setCategories([...categories, value]);\n                break;\n            case 'statuses':\n                statuses.includes(value) ? setStatuses(statuses.filter(s => s !== value)) : setStatuses([...statuses, value]);\n                break;\n            case 'types':\n                value === itemType ? setItemType('') : setItemType(value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const filteredItems = items.filter(item => {\n        return (\n            (categories.length === 0 || (item.categories && item.categories.some(category => categories.includes(category)))) &&\n            (statuses.length === 0 || (item.statuses && item.statuses.some(status => statuses.includes(status)))) &&\n            (itemType === '' || itemType === item.type) &&\n            (applyPriceFilter ? item.price >= priceRange.min && item.price <= priceRange.max : true)\n        );\n    });\n\n    const sortedItems = filteredItems.sort((a, b) => {\n        if (sort.value === 'default') {\n            return a.id - b.id;\n        } else if (sort.value === 'price-asc') {\n            return a.price - b.price;\n        } else if (sort.value === 'price-desc') {\n            return b.price - a.price;\n        } else if (sort.value === 'likes-asc') {\n            return b.likes - a.likes;\n        } else if (sort.value === 'likes-desc') {\n            return a.likes - b.likes;\n        }\n    });\n\n    return (\n        <ExploreContext.Provider value={{\n            items,\n            categories,\n            setCategories,\n            statuses,\n            setStatuses,\n            itemType,\n            setItemType,\n            priceRange,\n            setPriceRange,\n            sortedItems,\n            sort,\n            setSort,\n            setChecked,\n            cryptoCurrency,\n            setCryptoCurrency,\n            applyPriceFilter,\n            setApplyPriceFilter\n        }}>\n            {children}\n        </ExploreContext.Provider>\n    );\n}\n\nexport const useExploreContext = () => useContext(ExploreContext);\n","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport {StyledAccordionDetails} from '@ui/StyledAccordion';\nimport Checkbox from '@ui/Checkbox';\nimport {StyledAccordionSummary, StyledAccordion} from '@ui/StyledAccordion';\nimport CustomSelect from '@ui/CustomSelect';\nimport ResponsiveSidebar from '@ui/ResponsiveSidebar';\nimport {Fragment} from 'react';\n\n// hooks\nimport {useFilterContext} from '@contexts/filterContext';\nimport {useWindowSize} from 'react-use';\nimport {useExploreContext} from '@contexts/exploreContext';\nimport {useForm} from 'react-hook-form';\n\n// constants\nimport {CRYPTO_CURRENCIES, CATEGORIES, TYPE, STATUS} from '@constants/explore';\n\nconst Details = styled(StyledAccordionDetails)`\n  padding-bottom: 30px !important;\n`;\n\nconst Sidebar = () => {\n    const {\n        categories,\n        statuses,\n        itemType,\n        priceRange,\n        setPriceRange,\n        setChecked,\n        cryptoCurrency,\n        setCryptoCurrency,\n        applyPriceFilter,\n        setApplyPriceFilter\n    } = useExploreContext();\n    const {isSidebarOpen, openSidebar, closeSidebar} = useFilterContext();\n    const {register, handleSubmit, reset} = useForm();\n    const isDrawer = useWindowSize().width < 1024;\n    const SidebarWrapper = isDrawer ? ResponsiveSidebar : Fragment;\n    const wrapperProps = isDrawer ? {open: isSidebarOpen, onOpen: openSidebar, onClose: closeSidebar} : {};\n\n    const onSubmit = () => {\n        setApplyPriceFilter(true);\n    }\n\n    const onReset = () => {\n        reset();\n        setApplyPriceFilter(false);\n        setPriceRange({min: 0, max: 0});\n    }\n\n    const Summary = ({title}) => {\n        return (\n            <StyledAccordionSummary>\n                <h5>{title}</h5>\n                <i className=\"icon icon-angle-down\"/>\n            </StyledAccordionSummary>\n        );\n    }\n\n    return (\n        <SidebarWrapper {...wrapperProps}>\n            <div className=\"sidebar\">\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Price range\"/>\n                        <Details>\n                            <form className=\"d-flex flex-column g-10\" onSubmit={handleSubmit(onSubmit)}>\n                                <CustomSelect className=\"outline\"\n                                              setSelected={setCryptoCurrency}\n                                              options={CRYPTO_CURRENCIES}\n                                              selected={cryptoCurrency}/>\n                                <div className=\"d-grid g-10\" style={{gridTemplateColumns: '1fr 1fr'}}>\n                                    <input type=\"text\"\n                                           className=\"field field--outline w-100\"\n                                           placeholder=\"0.00\"\n                                           {...register('min', {\n                                               required: true,\n                                               min: 0,\n                                               valueAsNumber: true,\n                                               onChange: e => setPriceRange({...priceRange, min: e.target.value}),\n                                               validate: (value) => value <= priceRange.max\n                                           })}/>\n                                    <input type=\"text\"\n                                           className=\"field field--outline w-100\"\n                                           placeholder=\"0.00\"\n                                           {...register('max', {\n                                               required: true,\n                                               min: 0,\n                                               valueAsNumber: true,\n                                               onChange: e => setPriceRange({...priceRange, max: e.target.value}),\n                                               validate: (value) => value >= priceRange.min,\n                                           })}/>\n                                </div>\n                                {\n                                    applyPriceFilter ?\n                                        <button className=\"btn btn--outline\" onClick={onReset}>\n                                            Reset\n                                        </button>\n                                        :\n                                        <button className=\"btn btn--outline\" type=\"submit\">Filter</button>\n                                }\n                            </form>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Categories\"/>\n                        <Details>\n                            <ul className=\"sidebar_list\">\n                                {\n                                    CATEGORIES.map(category => (\n                                        <li className=\"sidebar_list-item\"\n                                            key={category.value}>\n                                            <Checkbox id={category.value}\n                                                      onChange={() => setChecked('categories', category.value)}\n                                                      checked={categories.includes(category.value)}/>\n                                            <label htmlFor={category.value}>{category.label}</label>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Status\"/>\n                        <Details>\n                            <ul className=\"sidebar_list\">\n                                {\n                                    STATUS.map(status => (\n                                        <li className=\"sidebar_list-item\"\n                                            key={status.value}>\n                                            <Checkbox id={status.value}\n                                                      onChange={() => setChecked('statuses', status.value)}\n                                                      checked={statuses.includes(status.value)}/>\n                                            <label htmlFor={status.value}>{status.label}</label>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Type\"/>\n                        <Details>\n                            <ul className=\"sidebar_list\">\n                                {\n                                    TYPE.map(type => (\n                                        <li className=\"sidebar_list-item\"\n                                            key={type.value}>\n                                            <Checkbox id={type.value}\n                                                      onChange={() => setChecked('types', type.value)}\n                                                      checked={itemType === type.value}/>\n                                            <label htmlFor={type.value}>{type.label}</label>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n            </div>\n        </SidebarWrapper>\n    )\n}\n\nexport default Sidebar","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"style_grid__KqXuB\"};","// styling\nimport styles from './style.module.scss';\n\n// components\nimport CustomSelect from '@ui/CustomSelect';\nimport ItemsGrid from '@components/ItemsGrid';\nimport Pagination from '@ui/Pagination';\nimport StickyFilterBar from '@ui/StickyFilterBar';\nimport NothingFound from '@components/NothingFound';\n\n// constants\nimport {SORTING_OPTIONS} from '@constants/explore';\n\n// hooks\nimport {useWindowSize} from 'react-use';\nimport usePagination from '@hooks/usePagination';\nimport {useExploreContext} from '@contexts/exploreContext';\n\nconst Items = () => {\n    const {sortedItems, sort, setSort} = useExploreContext();\n    const pagination = usePagination(sortedItems, 12);\n    const isTablet = useWindowSize().width < 1024;\n\n    return (\n        <div className=\"d-flex flex-column g-20\">\n            <div className=\"d-flex flex-wrap align-items-center justify-content-between g-10\" ref={pagination.containerRef}>\n                {isTablet && <StickyFilterBar bottom=\"#items\"/>}\n                <span className=\"text-sm\">{pagination.showingOf()}</span>\n                <CustomSelect options={SORTING_OPTIONS} selected={sort} setSelected={setSort} variant=\"minimal\" />\n            </div>\n            <div>\n                {\n                    sortedItems.length > 0 ?\n                        <ItemsGrid className={styles.grid} items={pagination.currentItems()} />\n                        :\n                        <NothingFound />\n                }\n                {pagination.maxPage > 1 && <Pagination pagination={pagination} />}\n            </div>\n        </div>\n    )\n}\n\nexport default Items","// components\nimport Title from '@components/Title';\nimport SimplePageHeader from '@components/SimplePageHeader';\nimport Wrapper from '@layout/explore/Wrapper';\nimport Sidebar from '@layout/explore/Sidebar';\nimport Items from '@layout/explore/Items';\n\n// context\nimport {FilterContextAPI} from '@contexts/filterContext';\nimport {ExploreContextAPI} from '@contexts/exploreContext';\n\nconst Explore = () => {\n    return (\n        <>\n            <Title title=\"Explore\" />\n            <SimplePageHeader title=\"Explore\" />\n            <main>\n                <ExploreContextAPI>\n                    <FilterContextAPI>\n                        <Wrapper>\n                            <Sidebar />\n                            <Items />\n                        </Wrapper>\n                    </FilterContextAPI>\n                </ExploreContextAPI>\n            </main>\n        </>\n    )\n}\n\nexport default Explore","// utils\nimport PropTypes from 'prop-types';\nimport {memo} from 'react';\n\nconst Checkbox = ({id, onChange, ...props}) => {\n    return (\n        <div className=\"checkbox\">\n            <input id={id} type=\"checkbox\" onChange={onChange} {...props}/>\n            <label className=\"d-flex align-items-center justify-content-center\" htmlFor={id}>\n                <i className=\"icon icon-check-solid\"/>\n            </label>\n        </div>\n    );\n}\n\nCheckbox.propTypes = {\n    id: PropTypes.string.isRequired,\n    onChange: PropTypes.func\n}\n\nexport default memo(Checkbox);","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nexport const StyledAccordion = styled(Accordion)`\n  background: transparent !important;\n  box-shadow: none !important;\n  margin: 0 !important;\n\n  &:before {\n    display: none;\n  }\n`;\n\nexport const StyledAccordionSummary = styled(AccordionSummary)`\n  padding: 0 !important;\n  color: var(--text-light) !important;\n  min-height: 0 !important;\n\n  .MuiAccordionSummary-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: 0 !important;\n\n    .icon {\n      transition: all var(--transition);\n      will-change: transform;\n\n      &:hover {\n        color: var(--accent);\n      }\n    }\n\n    &.Mui-expanded .icon {\n      transform: rotate(180deg);\n    }\n  }\n`;\n\nexport const StyledAccordionDetails = styled(AccordionDetails)`\n  padding: 0 !important;\n`;"],"names":["_ref","children","_jsx","className","concat","styles","ExploreContext","createContext","undefined","ExploreContextAPI","items","all_items","_useState","useState","_useState2","_slicedToArray","categories","setCategories","_useState3","_useState4","statuses","setStatuses","_useState5","_useState6","itemType","setItemType","_useState7","min","max","_useState8","priceRange","setPriceRange","_useState9","SORTING_OPTIONS","_useState10","sort","setSort","_useState11","CRYPTO_CURRENCIES","_useState12","cryptoCurrency","setCryptoCurrency","_useState13","_useState14","applyPriceFilter","setApplyPriceFilter","sortedItems","filter","item","length","some","category","includes","status","type","price","a","b","value","id","likes","Provider","setChecked","c","_toConsumableArray","s","useExploreContext","useContext","Details","styled","StyledAccordionDetails","withConfig","componentId","_useExploreContext","_useFilterContext","useFilterContext","isSidebarOpen","openSidebar","closeSidebar","_useForm","useForm","register","handleSubmit","reset","isDrawer","useWindowSize","width","SidebarWrapper","ResponsiveSidebar","Fragment","wrapperProps","open","onOpen","onClose","Summary","title","_jsxs","StyledAccordionSummary","_objectSpread","StyledAccordion","defaultExpanded","onSubmit","CustomSelect","setSelected","options","selected","style","gridTemplateColumns","placeholder","required","valueAsNumber","onChange","e","target","validate","onClick","CATEGORIES","Checkbox","checked","htmlFor","label","STATUS","TYPE","pagination","usePagination","isTablet","ref","containerRef","StickyFilterBar","bottom","showingOf","variant","ItemsGrid","currentItems","NothingFound","maxPage","Pagination","_Fragment","Title","SimplePageHeader","FilterContextAPI","Wrapper","Sidebar","Items","props","_objectWithoutProperties","_excluded","memo","Accordion","AccordionSummary","AccordionDetails"],"sourceRoot":""}